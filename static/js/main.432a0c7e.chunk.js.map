{"version":3,"sources":["reportWebVitals.js","api/api.js","redux/app-reducer.js","redux/store.js","components/Header/Menu/Burger.jsx","components/Header/Menu/BurgerContainer.jsx","components/Header/Menu/Menu.jsx","components/Header/ThemeToggler/ThemeToggler.jsx","components/Header/ThemeToggler/ThemeTogglerContainer.jsx","components/Header/Header.jsx","components/Info/Info.jsx","components/Info/InfoContainer.jsx","components/UI/Button.jsx","components/UI/Input.jsx","components/Cities/CitiesForm/CitiesForm.jsx","assets/images/remove.svg","components/Cities/CitiesItem/CitiesItem.jsx","components/Cities/Cities.jsx","components/Cities/CitiesContainer.jsx","App.js","assets/images/preloader.svg","components/UI/Preloader.jsx","AppContainer.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","instance","axios","create","baseURL","API","getWeather","city","get","response","data","SET_THEME","SET_WEATHER_DATA","SET_CURRENT_CITY","SET_REQUEST_STATUS","INITIALIZED_SUCCESS","ADD_CITY","REMOVE_CITY","CHECK_IS_SINGLE_CITY","initialState","themes","light","name","styles","primary","background","appBackground","burger","shadow","toggler","container","circle","input","color","button","cities","dark","theme","isSingleCity","currentCity","weather","status","temperature","imageCode","initialized","requestStatus","addCity","type","id","getUnicalId","setWeatherData","setRequestStatus","setCurrentCity","checkIsSingleCity","getWeatherData","dispatch","cod","weatherData","description","main","temp","icon","catch","e","appReducer","state","action","filter","length","store","createStore","applyMiddleware","thunkMiddleware","window","BurgerWrapper","styled","props","Burger","className","connect","Menu","ThemeTogglerWrapper","div","ThemeToggler","useState","togglerCircle","moveTogglerCircle","onClick","toggleTheme","style","marginLeft","setTheme","HeaderStyles","header","Header","InfoWrapper","Info","src","alt","dateData","weekday","day","month","hours","minutes","Math","round","date","Date","getDate","Intl","DateTimeFormat","format","toLocaleString","getHours","slice","getMinutes","ButtonWrapper","itemBackground","itemColor","Button","children","InputWrapper","Input","CitiesFormWrapper","CitiesForm","setIsBlur","validationSchema","yup","shape","strict","matches","typeError","required","max","min","initialValues","onSubmit","values","submitProps","errors","some","item","addAndPickCity","isValid","dirty","touched","handleChange","handleBlur","isSubmitting","onBlur","onFocus","value","placeholder","onChange","disabled","CitiesItemWrapper","li","CitiesItem","cityItem","pickCity","stopPropagation","removeCity","dataId","deleteIcon","CitiesWrapper","Cities","map","setSubmitting","console","warn","getWeatherDataAndAddCity","AppWrapper","App","PreloaderWrapper","Preloader","preloader","GlobalStyle","createGlobalStyle","initializeApp","promises","Promise","all","useEffect","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.432a0c7e.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import axios from \"axios\";\r\n\r\nconst API_KEY = \"bc4b5b106eb4f6a33bb5c03f83e1937c\";\r\n\r\nconst instance = axios.create({\r\n    baseURL: \"https://api.openweathermap.org/data/2.5/\",\r\n});\r\n\r\nconst API = {\r\n    getWeather(city) {\r\n        return instance\r\n            .get(`weather?q=${city}&appid=${API_KEY}&units=metric`)\r\n            .then((response) => {\r\n                return response.data;\r\n            });\r\n        \r\n    },\r\n};\r\n\r\nexport default API;\r\n","import API from \"../api/api\";\r\nimport { v4 as getUnicalId } from \"uuid\";\r\n\r\nconst SET_THEME = \"SET-THEME\";\r\nconst SET_WEATHER_DATA = \"SET-WEATHER-DATA\";\r\nconst SET_CURRENT_CITY = \"SET-CURRENT-CITY\";\r\nconst SET_REQUEST_STATUS = \"SET-REQUEST-STATUS\";\r\nconst INITIALIZED_SUCCESS = \"INITIALIZED-SUCCESS\";\r\nconst ADD_CITY = \"ADD-CITY\";\r\nconst REMOVE_CITY = \"REMOVE-CITY\";\r\nconst CHECK_IS_SINGLE_CITY = \"CHECK-IS-SINGLE-CITY\";\r\n\r\nconst initialState = {\r\n    themes: {\r\n        light: {\r\n            name: \"light\",\r\n            styles: {\r\n                primary: \"#363434\",\r\n                background: \"#FFFFFF\",\r\n                appBackground:\r\n                    \"linear-gradient(180deg, rgba(155, 245, 240, 0.8) 0%, rgba(141, 240, 169, 0.8) 100%)\",\r\n                burger: \"#333232\",\r\n                shadow: \"4px 4px 8px 0px rgba(34, 60, 80, 0.2)\",\r\n                toggler: {\r\n                    container: \"#284c54\",\r\n                    circle: \"#FFFFFF\",\r\n                },\r\n                input: {\r\n                    color: \"#363434\",\r\n                    background: \"#FFFFFF\",\r\n                },\r\n                button: {\r\n                    color: \"#FFFFFF\",\r\n                    background: \"#33cfb2;\",\r\n                },\r\n                cities: {\r\n                    background: \"rgba(27, 26, 26, 0.15)\",\r\n                },\r\n            },\r\n        },\r\n        dark: {\r\n            name: \"dark\",\r\n            styles: {\r\n                primary: \"#FFFFFF\",\r\n                shadow: \"4px 4px 8px 0px #320f52\",\r\n                background: \"#232323\",\r\n                burger: \"#FFFFFF\",\r\n                appBackground:\r\n                    \"linear-gradient(180deg, rgba(16, 16, 16, 0.9) 0%, rgba(14, 11, 16, 0.9) 100%)\",\r\n                toggler: {\r\n                    container: \"#232323\",\r\n                    circle: \"#FFFFFF\",\r\n                },\r\n                cities: {\r\n                    background: \"rgba(27, 26, 26, 0.95)\",\r\n                },\r\n                input: {\r\n                    color: \"#363434\",\r\n                    background: \"#FFFFFF\",\r\n                },\r\n                button: {\r\n                    color: \"#FFFFFF\",\r\n                    background: \"#4e1390\",\r\n                },\r\n            },\r\n        },\r\n    },\r\n    theme: {\r\n        name: \"dark\",\r\n        styles: {\r\n            primary: \"#FFFFFF\",\r\n            burger: \"#FFFFFF\",\r\n            shadow: \"4px 4px 8px 0px #320f52\",\r\n            background: \"#232323\",\r\n            appBackground:\r\n                \"linear-gradient(180deg, rgba(16, 16, 16, 0.9) 0%, rgba(14, 11, 16, 0.9) 100%)\",\r\n            toggler: {\r\n                container: \"#232323\",\r\n                circle: \"#FFFFFF\",\r\n            },\r\n            cities: {\r\n                background: \"rgba(27, 26, 26, 0.95)\",\r\n            },\r\n            input: {\r\n                color: \"#363434\",\r\n                background: \"#FFFFFF\",\r\n            },\r\n            button: {\r\n                color: \"#FFFFFF\",\r\n                background: \"#4e1390\",\r\n            },\r\n        },\r\n    },\r\n    isSingleCity: true,\r\n    currentCity: \"\",\r\n    weather: {\r\n        city: \"...\",\r\n        status: \"...\",\r\n        temperature: \"...\",\r\n        imageCode: \"\",\r\n    },\r\n    cities: [],\r\n    initialized: false,\r\n    requestStatus: false, // isRequestSuccess\r\n};\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_THEME: {\r\n            return {\r\n                ...state,\r\n                theme: action.theme,\r\n            };\r\n        }\r\n        case SET_WEATHER_DATA: {\r\n            return {\r\n                ...state,\r\n                weather: action.weather,\r\n            };\r\n        }\r\n        case INITIALIZED_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                initialized: true,\r\n            };\r\n        }\r\n        case SET_CURRENT_CITY: {\r\n            return {\r\n                ...state,\r\n                currentCity: action.currentCity,\r\n            };\r\n        }\r\n        case ADD_CITY: {\r\n            return {\r\n                ...state,\r\n                cities: [...state.cities, action.city],\r\n            };\r\n        }\r\n        case REMOVE_CITY: {\r\n            return {\r\n                ...state,\r\n                cities: state.cities.filter((city) => {\r\n                    return city.id !== action.id;\r\n                }),\r\n            };\r\n        }\r\n        case CHECK_IS_SINGLE_CITY: {\r\n            return {\r\n                ...state,\r\n                isSingleCity: state.cities.length === 1,\r\n            };\r\n        }\r\n        case SET_REQUEST_STATUS: {\r\n            return {\r\n                ...state,\r\n                requestStatus: action.requestStatus,\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const addCity = (city) => {\r\n    return {\r\n        type: ADD_CITY,\r\n        city: {\r\n            name: city,\r\n            id: getUnicalId(),\r\n        },\r\n    };\r\n};\r\n\r\nexport const pickCity = (city) => {\r\n    return (dispatch) => {\r\n        dispatch(setCurrentCity(city));\r\n        dispatch(getWeatherData(city));\r\n    };\r\n};\r\n\r\nexport const getWeatherDataAndAddCity = (city, setSubmitting) => {\r\n    return (dispatch) => {\r\n        return API.getWeather(city)\r\n            .then((data) => {\r\n                if (data.cod === 200) {\r\n                    const weatherData = {\r\n                        city: data.name,\r\n                        status: data.weather[0].description,\r\n                        temperature: data.main.temp,\r\n                        imageCode: data.weather[0].icon,\r\n                    };\r\n                    dispatch(setRequestStatus(true));\r\n                    return weatherData;\r\n                }\r\n            })\r\n            .then(weatherData => {\r\n                dispatch(setWeatherData(weatherData));\r\n                dispatch(addCity(city));\r\n                dispatch(checkIsSingleCity());\r\n                setSubmitting(true);\r\n            })\r\n            .catch((e) => {\r\n                dispatch(setRequestStatus(false));\r\n                console.warn(\"The city does not exist\");\r\n                // иницциалищипуем с городом по умолчанию\r\n            })\r\n    };\r\n};\r\n\r\nexport const addAndPickCity = (city) => {\r\n    return (dispatch) => {\r\n        dispatch(getWeatherDataAndAddCity(city))\r\n    }\r\n}\r\n\r\nexport const removeCity = (id) => {\r\n    return {\r\n        type: REMOVE_CITY,\r\n        id: id,\r\n    };\r\n};\r\n\r\nexport const setTheme = (theme) => {\r\n    return {\r\n        type: SET_THEME,\r\n        theme: theme,\r\n    };\r\n};\r\n\r\nconst setWeatherData = (data) => {\r\n    return {\r\n        type: SET_WEATHER_DATA,\r\n        weather: { ...data },\r\n    };\r\n};\r\n\r\nconst setRequestStatus = (status) => {\r\n    return {\r\n        type: SET_REQUEST_STATUS,\r\n        requestStatus: status,\r\n    };\r\n};\r\n\r\nexport const setCurrentCity = (city) => {\r\n    return {\r\n        type: SET_CURRENT_CITY,\r\n        currentCity: city,\r\n    };\r\n};\r\n\r\nexport const checkIsSingleCity = () => {\r\n    return {\r\n        type: CHECK_IS_SINGLE_CITY,\r\n    };\r\n};\r\n\r\nexport const getWeatherData = (city) => {\r\n    return (dispatch) => {\r\n        return API.getWeather(city)\r\n            .then((data) => {\r\n                if (data.cod === 200) {\r\n                    const weatherData = {\r\n                        city: data.name,\r\n                        status: data.weather[0].description,\r\n                        temperature: data.main.temp,\r\n                        imageCode: data.weather[0].icon,\r\n                    };\r\n                    dispatch(setRequestStatus(true));\r\n                    return weatherData;\r\n                }\r\n            })\r\n            .then(weatherData => {\r\n                dispatch(setWeatherData(weatherData));\r\n                // Add city\r\n            })\r\n            .catch((e) => {\r\n                dispatch(setRequestStatus(false));\r\n                // иницциалищипуем с городом по умолчанию\r\n            })\r\n    };\r\n};\r\n\r\nconst initializingSuccess = () => ({ type: INITIALIZED_SUCCESS });\r\n\r\nexport const initializeApp = (city) => {\r\n    return (dispatch) => {\r\n        const promises = [\r\n            dispatch(setCurrentCity(city)),\r\n            dispatch(getWeatherData(city)),\r\n            dispatch(addCity(city)),\r\n        ];\r\n        Promise.all(promises).then(() => dispatch(initializingSuccess()));\r\n    };\r\n};\r\n\r\nexport default appReducer;","import { applyMiddleware, createStore } from 'redux';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport appReducer from './app-reducer';\r\n\r\nconst store = createStore(appReducer, applyMiddleware(thunkMiddleware));\r\n\r\nwindow.store = store;\r\n\r\nexport default store;","import styled from \"styled-components\";\r\n\r\nconst BurgerWrapper = styled.button`\r\n    display: block;\r\n    width: 30px;\r\n    cursor: pointer;\r\n    border: none;\r\n    padding: 0;\r\n    background-color: transparent;\r\n\r\n    span {\r\n        display: block;\r\n        width: 100%;\r\n        height: 3px;\r\n        margin-bottom: 4px;\r\n        border-radius: 10px;\r\n        background-color: ${props => props.theme.burger};\r\n        transition: background-color .8s;\r\n        \r\n        &:last-child {\r\n            margin-bottom: 0;\r\n        }\r\n    }\r\n`;\r\n\r\nconst Burger = (props) => {\r\n    return (\r\n        <BurgerWrapper theme={props.theme} className=\"Burger\">\r\n            <span></span>\r\n            <span></span>\r\n            <span></span>\r\n        </BurgerWrapper>\r\n    )\r\n}\r\n\r\nexport default Burger;","import { connect } from 'react-redux';\r\nimport Burger from './Burger';\r\n\r\nconst BurgerContainer = (props) => {\r\n    return <Burger theme={props.theme}/>;\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        theme: state.theme.styles,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(BurgerContainer);","import BurgerContainer from './BurgerContainer';\r\n\r\nconst Menu = (props) => {\r\n    return (\r\n        <>\r\n            <BurgerContainer />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Menu;\r\n","import { useState } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst ThemeTogglerWrapper = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: flex-start;\r\n    background-color: ${props => props.theme.toggler.container || '#000000'};\r\n    border-radius: 10px;\r\n    width: 44px;\r\n    height: 22px;\r\n    cursor: pointer;\r\n\ttransition: background-color .8s;\r\n\r\n    .Circle {\r\n        background-color: ${props => props.theme.toggler.circle || '#000000'};\r\n        border-radius: 50%;\r\n        width: 15px;\r\n        height: 15px;\r\n        margin-left: 3px;\r\n        transition: background-color .8s, margin .5s ease-out;\r\n    }\r\n`;\r\n\r\nconst ThemeToggler = (props) => {\r\n    const [togglerCircle, moveTogglerCircle] = useState(false);\r\n    \r\n    const handleClick = (e) => {\r\n        moveTogglerCircle(!togglerCircle);\r\n        props.toggleTheme();\r\n    }\r\n\r\n    return (\r\n        <ThemeTogglerWrapper theme={props.theme} className=\"Toggler\" onClick={handleClick}>\r\n            <div className=\"Circle\" style={togglerCircle ? {marginLeft: 26} : {}}></div>\r\n        </ThemeTogglerWrapper>\r\n    );\r\n};\r\n\r\nexport default ThemeToggler;","import { connect } from 'react-redux';\r\nimport { setTheme } from '../../../redux/app-reducer';\r\nimport ThemeToggler from './ThemeToggler';\r\n\r\nconst ThemeTogglerContainer = (props) => {\r\n    const toggleTheme = () => {\r\n        if (props.theme.name === props.themes.light.name) {\r\n            props.setTheme(props.themes.dark);\r\n        } else {\r\n            props.setTheme(props.themes.light);\r\n        }\r\n    };\r\n    return <ThemeToggler theme={props.theme.styles} toggleTheme={toggleTheme}/>;\r\n    \r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        theme: state.theme,\r\n        themes: state.themes,\r\n\t}\r\n}\r\n\r\nexport default connect(mapStateToProps, { setTheme })(ThemeTogglerContainer);","import styled from \"styled-components\";\r\nimport Menu from \"./Menu/Menu\";\r\nimport ThemeTogglerContainer from \"./ThemeToggler/ThemeTogglerContainer\";\r\n\r\nconst HeaderStyles = styled.header`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n`;\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <HeaderStyles>\r\n            <Menu />\r\n            <ThemeTogglerContainer />\r\n        </HeaderStyles>\r\n    );\r\n};\r\n\r\nexport default Header;","import styled from 'styled-components';\r\n\r\nconst InfoWrapper = styled.div`\r\n    text-align: center;\r\n    margin-bottom: 75px;\r\n    padding-top: 100px;\r\n\r\n    .Location {\r\n        font-weight: 100;\r\n        font-size: 48px;\r\n        line-height: 56px;\r\n        margin-bottom: 40px;\r\n    }\r\n    .Img {\r\n        margin-right: 25px;\r\n    }\r\n    .Date {\r\n        font-weight: 500;\r\n        font-size: 24px;\r\n        line-height: 28px;\r\n        margin-left: 25px;\r\n\r\n        p {\r\n            margin: 10px 0;\r\n        }\r\n    }\r\n    .Degree {\r\n        font-weight: bold;\r\n        font-size: 72px;\r\n        line-height: 84px;\r\n    }\r\n    .Status {\r\n        font-weight: 500;\r\n        font-size: 20px;\r\n        text-transform: capitalize;\r\n    }\r\n    .Today {\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        flex-wrap: wrap;\r\n        margin-bottom: 40px;\r\n    }\r\n`;\r\n\r\nconst Info = (props) => {\r\n    return (\r\n        <InfoWrapper className=\"Info\">\r\n            <div className=\"Location\">{props.weather.city}</div>\r\n            <div className=\"Today\">\r\n                <div className=\"Img\">\r\n                    <img src={`http://openweathermap.org/img/wn/${props.weather.imageCode}@2x.png`} alt={props.weather.status} />\r\n                </div>\r\n                <div className=\"Date\">\r\n                    <p>\r\n                        {`${props.dateData.weekday}, ${props.dateData.day} ${props.dateData.month}`}\r\n                    </p>\r\n                    <p>\r\n                        <time>{`${props.dateData.hours}:${props.dateData.minutes}`}</time>\r\n                    </p>\r\n                </div>\r\n            </div>\r\n            <div className=\"Degree\">{Math.round(props.weather.temperature)}°C</div>\r\n            <div className=\"Status\">{props.weather.status}</div>\r\n        </InfoWrapper>\r\n    );\r\n};\r\n\r\nexport default Info;","import { connect } from 'react-redux';\r\nimport Info from './Info';\r\n\r\nconst InfoContainer = (props) => {\r\n    \r\n    let date = new Date();\r\n    const dateData = {\r\n        day: date.getDate(),\r\n        weekday: new Intl.DateTimeFormat('en-US', { weekday: 'long' }).format(date.getDate()),\r\n        month: date.toLocaleString('default', { month: 'long' }),\r\n        hours: ('0' + date.getHours()).slice(-2),\r\n        minutes: ('0' + date.getMinutes()).slice(-2),\r\n    };\r\n\r\n    return (\r\n        <Info dateData={dateData} weather={props.weather}/>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        weather: state.weather,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {})(InfoContainer);\r\n","import styled from 'styled-components';\r\n\r\nconst ButtonWrapper = styled.button`\r\n    background-color: ${props => props.itemBackground || '#FFFFFF'};\r\n    color: ${props => props.itemColor || '#000000'};\r\n    padding: 5px 10px;\r\n    font-weight: 700;\r\n    font-size: 16px;\r\n    line-height: 1.1;\r\n    border: none;\r\n    box-shadow: ${props => props.shadow || 'none'};\r\n`\r\n\r\nconst Button = (props) => {\r\n    return (\r\n        <ButtonWrapper {...props}>{props.children}</ButtonWrapper>\r\n    )\r\n}\r\n\r\nexport default Button;","import styled from 'styled-components';\r\n\r\nconst InputWrapper = styled.input`\r\n    background-color: ${props => props.itemBackground || '#FFFFFF'};\r\n    color: ${props => props.itemColor || '#000000'};\r\n    border: none;\r\n    padding: 5px 10px;\r\n    outline-color: ${props => props.itemBackground || '#FFFFFF'};\r\n    font-size: 16px;\r\n    line-height: 1.1;\r\n    box-shadow: ${props => props.shadow || 'none'};\r\n`\r\n\r\nconst Input = (props) => {\r\n    return (\r\n        <InputWrapper {...props}/>\r\n    )\r\n}\r\n\r\nexport default Input;","import styled from \"styled-components\";\r\nimport { Form, Formik, ErrorMessage } from \"formik\";\r\nimport Button from \"../../UI/Button\";\r\nimport Input from \"../../UI/Input\";\r\nimport * as yup from \"yup\";\r\nimport { useState } from 'react';\r\n\r\nconst CitiesFormWrapper = styled.div`\r\n    margin-bottom: 30px;\r\n\r\n    input {\r\n        width: 66.666%;\r\n        &.invalid {\r\n            border: 1px solid red;\r\n        }\r\n    }\r\n\r\n    button {\r\n        width: 33.333%;\r\n\r\n        &:disabled {\r\n            opacity: .5;\r\n        }\r\n    }\r\n\r\n    .error {\r\n        color: red;\r\n        margin-top: 10px;\r\n        font-size: 16px;\r\n    }\r\n`;\r\n\r\nconst CitiesForm = (props) => {\r\n    const [isBlur, setIsBlur] = useState(true);\r\n    const [status, setStatus] = useState('');\r\n    \r\n    const validationSchema = yup.object().shape({\r\n        city: yup\r\n            .string()\r\n            .strict()\r\n            .matches(/^[A-Za-z]+$/, 'Please enter a city name, without numbers')\r\n            .typeError('Please enter a city name, without numbers')\r\n            .required('')\r\n            .max(58)\r\n            .min(2)\r\n    });\r\n\r\n    const addCity = (values, errors, submitProps) => {\r\n        const isCityAlreadyExist = props.cities.some((item) => item.name === values.city);\r\n\r\n        if (!isCityAlreadyExist) {\r\n            props.addAndPickCity(values.city, props.requestStatus);\r\n            values.city = '';\r\n            // props.addAndPickCity(values.city, submitProps.setSubmitting, props.requestStatus);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <CitiesFormWrapper className=\"CitiesForm\">\r\n            <Formik \r\n                initialValues={{ city: \"\" }}\r\n                validationSchema={validationSchema}\r\n                onSubmit={(values, submitProps) => {addCity(values, submitProps)}}>\r\n                {({\r\n                    values,\r\n                    errors,\r\n                    isValid,\r\n                    dirty,\r\n                    touched,\r\n                    handleChange,\r\n                    handleBlur,\r\n                    isSubmitting\r\n                }) => (\r\n                    <Form>\r\n                        <Input\r\n                            onBlur={(e) => {\r\n                                handleBlur(e);\r\n                                setIsBlur(true);\r\n                            }}\r\n                            onFocus={() => setIsBlur(false)}\r\n                            name=\"city\"\r\n                            type=\"text\"\r\n                            value={values.city}\r\n                            placeholder=\"Enter city name\"\r\n                            itemBackground={props.theme.input.background}\r\n                            itemColor={props.theme.input.color}\r\n                            onChange={handleChange}\r\n                            className={touched.city && errors.city && 'invalid'}\r\n                        />\r\n                        <Button\r\n                            disabled={!isValid && !dirty}\r\n                            type=\"submit\"\r\n                            itemBackground={props.theme.button.background}\r\n                            itemColor={props.theme.button.color}\r\n                            shadow={props.theme.shadow}\r\n                        >\r\n                            Добавить\r\n                        </Button>\r\n                        <div className='error'>{touched.city && errors.city}</div>\r\n                    </Form>\r\n                )}\r\n            </Formik>\r\n        </CitiesFormWrapper>\r\n    );\r\n};\r\n\r\nexport default CitiesForm;","export default __webpack_public_path__ + \"static/media/remove.562b6f7b.svg\";","import styled from 'styled-components';\r\nimport deleteIcon from '../../../assets/images/remove.svg';\r\n\r\nconst CitiesItemWrapper = styled.li`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    word-break: break-all;\r\n    font-weight: 500;\r\n    font-size: 18px;\r\n    line-height: 30px;\r\n    cursor: pointer;\r\n    padding: 15px 0;\r\n\r\n    .Delete {\r\n        width: 30px;\r\n        height: 30px;\r\n        flex-shrink: 0;\r\n    }\r\n`;\r\n\r\nconst CitiesItem = (props) => {\r\n    const cityItem = props.children;\r\n    const pickCity = () => {\r\n        if (!props.isSingleCity || props.currentCity !== cityItem)\r\n            props.pickCity(cityItem);\r\n    }\r\n    const removeCity = (e) => {\r\n        e.stopPropagation();\r\n        if (!props.isSingleCity) props.removeCity(props.dataId);\r\n        props.checkIsSingleCity();\r\n    }\r\n    return (\r\n        <CitiesItemWrapper onClick={pickCity} className=\"Item\">\r\n            <span>{props.children}</span>\r\n            {!props.isSingleCity && \r\n                <span className=\"Delete\" onClick={removeCity}>\r\n                    <img src={deleteIcon} alt=\"Delete city\" />\r\n                </span>\r\n            }\r\n        </CitiesItemWrapper>\r\n    );\r\n};\r\n\r\nexport default CitiesItem;\r\n","import styled from \"styled-components\";\r\nimport CitiesForm from './CitiesForm/CitiesForm';\r\nimport CitiesItem from \"./CitiesItem/CitiesItem\";\r\n\r\nconst CitiesWrapper = styled.div`\r\n    .Title {\r\n        font-weight: 300;\r\n        font-size: 36px;\r\n        line-height: 42px;\r\n        margin-bottom: 15px;\r\n        text-align: center;\r\n    }\r\n    .List {\r\n        padding: 20px;\r\n        border-radius: 10px;\r\n        background: ${props => props.theme.cities.background || ' rgba(27, 26, 26, 0.15)'};\r\n    }\r\n`;\r\n\r\nconst Cities = (props) => {\r\n    const cities = props.cities.map((item) => <CitiesItem currentCity={props.currentCity} checkIsSingleCity={props.checkIsSingleCity} isSingleCity={props.isSingleCity} dataId={item.id} key={item.id} removeCity={props.removeCity} pickCity={props.pickCity}>{item.name}</CitiesItem>);\r\n\r\n    return (\r\n        <CitiesWrapper className=\"Cities\" theme={props.theme}>\r\n            <div className=\"Title\">Your cities</div>\r\n            <CitiesForm requestStatus={props.requestStatus} cities={props.cities} theme={props.theme} addAndPickCity={props.addAndPickCity}/>\r\n            <ul className=\"List\">\r\n                {cities}\r\n            </ul>\r\n        </CitiesWrapper>\r\n    );\r\n};\r\n\r\nexport default Cities;\r\n","import { connect } from 'react-redux';\r\nimport { pickCity, addAndPickCity, removeCity, checkIsSingleCity } from '../../redux/app-reducer';\r\nimport Cities from './Cities';\r\n\r\nconst CitiesContainer = (props) => {\r\n    return (\r\n        <Cities {...props}/>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        theme: state.theme.styles,\r\n        cities: state.cities,\r\n        isSingleCity: state.isSingleCity,\r\n        currentCity: state.currentCity,\r\n        requestStatus: state.requestStatus\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { pickCity, addAndPickCity, removeCity, checkIsSingleCity })(CitiesContainer);","import styled from 'styled-components';\r\nimport Header from './components/Header/Header';\r\nimport InfoContainer from './components/Info/InfoContainer';\r\nimport CitiesContainer from './components/Cities/CitiesContainer';\r\n\r\nconst AppWrapper = styled.div`\r\n\tbackground: ${props => props.theme.appBackground};\r\n\tmax-width: 800px;\r\n\twidth: 100%;\r\n\tborder-radius: 15px;\r\n\tpadding: 30px;\r\n\tmargin: 30px auto;\r\n`;\r\n\r\nconst App = (props) => {\r\n    return (\r\n\t\t<AppWrapper theme={props.theme} className=\"App\">\r\n\t\t\t<Header />\r\n\t\t\t<InfoContainer />\r\n\t\t\t<CitiesContainer />\r\n\t\t</AppWrapper>\r\n    );\r\n};\r\n\r\nexport default App;","export default __webpack_public_path__ + \"static/media/preloader.6aaff771.svg\";","import styled from 'styled-components';\r\nimport preloader from '../../assets/images/preloader.svg';\r\n\r\nconst PreloaderWrapper = styled.div`\r\n    position: fixed;\r\n    left: 50%;\r\n    top: 50%;\r\n    transform: translate(-50%, -50%);\r\n    img {\r\n        width: 300px;\r\n    }\r\n`;\r\n\r\nconst Preloader = (props) => {\r\n    return (\r\n        <PreloaderWrapper>\r\n            <img src={preloader} alt='Loading...' />\r\n        </PreloaderWrapper>\r\n    )\r\n}\r\n\r\nexport default Preloader;","import { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { createGlobalStyle } from 'styled-components';\r\nimport App from './App';\r\nimport Preloader from './components/UI/Preloader';\r\nimport { initializeApp } from './redux/app-reducer';\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n\thtml {\r\n\t\tbox-sizing: border-box;\r\n\t}\r\n\r\n\t*,\r\n\t*::before,\r\n\t*::after {\r\n\t\tbox-sizing: inherit;\r\n\t}\r\n\r\n\tbody {\r\n\t\tfont-family: Roboto, sans-serif;\r\n\t\tfont-weight: 400;\r\n\t\t-webkit-font-smoothing: antialiased;\r\n\t\t-moz-osx-font-smoothing: grayscale;\r\n\t\tcolor: ${props => props.theme.primary || '#000000'};\r\n\t\tbackground-color: ${props => props.theme.background || '#FFFFFF'};\r\n\t\ttransition: color .4s ease-in-out, background-color .5s ease-in-out;\r\n\t}\r\n\r\n\timg {\r\n\t\tdisplay: flex;\r\n\t\tmax-width: 100%;\r\n\t}\r\n\r\n\ta,\r\n\tbutton {\r\n\t\tcursor: pointer;\r\n\t}\r\n\t\r\n\ta,\r\n\tbutton,\r\n\tinput,\r\n\ttextarea,\r\n\tspan {\r\n\t\tdisplay: inline-block;\r\n\t}\r\n`;\r\n\r\nconst AppContainer = (props) => {\r\n\tuseEffect(() => {\r\n\t\tprops.initializeApp('Kostanay' || 'Tokyo');\r\n\t},[])\r\n\r\n\tif (!props.initialized) {return <Preloader /> }\r\n\telse {\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<App theme={props.theme}/>\r\n\t\t\t\t<GlobalStyle theme={props.theme}/>\r\n\t\t\t</>\r\n\t\t)\r\n\t}\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\ttheme: state.theme.styles,\r\n\t\tcurrentCity: state.currentCity,\r\n\t\tinitialized: state.initialized,\r\n\t}\r\n}\r\nexport default connect(mapStateToProps, { initializeApp })(AppContainer);","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'reset-css';\r\nimport store from './redux/store';\r\nimport { Provider } from 'react-redux';\r\nimport AppContainer from './AppContainer';\r\n\r\nReactDOM.render(\r\n\t<Provider store={store}>\r\n\t\t<AppContainer />\r\n\t</Provider>,\r\n\tdocument.getElementById(\"root\"));\r\n\r\nreportWebVitals();"],"sourceRoot":""}