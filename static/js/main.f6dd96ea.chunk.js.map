{"version":3,"sources":["reportWebVitals.js","api/api.js","redux/app-reducer.js","redux/store.js","components/Header/ThemeToggler/ThemeToggler.jsx","components/Header/ThemeToggler/ThemeTogglerContainer.jsx","components/Header/Header.jsx","components/Info/Info.jsx","components/Info/InfoContainer.jsx","components/UI/Button.jsx","components/UI/Input.jsx","components/Cities/CitiesForm/CitiesForm.jsx","assets/images/remove.svg","components/Cities/CitiesItem/CitiesItem.jsx","components/Cities/Cities.jsx","components/Cities/CitiesContainer.jsx","assets/images/preloader.svg","components/UI/Preloader.jsx","App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","instance","axios","create","baseURL","API","getWeather","city","get","response","data","getUserCity","ip","location","SET_THEME","SET_WEATHER_DATA","SET_CURRENT_CITY","SET_REQUEST_STATUS","INITIALIZED_SUCCESS","ADD_CITY","REMOVE_CITY","CHECK_IS_SINGLE_CITY","initialState","themes","light","name","styles","primary","background","appBackground","burger","shadow","toggler","container","circle","input","color","button","cities","dark","theme","isSingleCity","currentCity","id","weather","status","temperature","imageCode","initialized","requestStatus","addCity","type","getUnicalId","pickCity","dispatch","setCurrentCity","getWeatherData","removeCity","setWeatherData","cod","weatherData","description","main","temp","icon","setRequestStatus","catch","e","checkIsSingleCity","appReducer","state","action","filter","length","store","createStore","applyMiddleware","thunkMiddleware","window","ThemeTogglerWrapper","styled","div","props","ThemeToggler","useState","isLightTheme","setIsLightTheme","className","onClick","toggleTheme","style","marginLeft","connect","setTheme","Header","InfoWrapper","Info","src","alt","dateData","weekday","day","month","hours","minutes","Math","round","date","Date","getDate","Intl","DateTimeFormat","format","toLocaleString","getHours","slice","getMinutes","ButtonWrapper","itemBackground","itemColor","Button","children","InputWrapper","Input","CitiesFormWrapper","CitiesForm","setStatus","validationSchema","yup","shape","strict","matches","typeError","required","max","min","initialValues","onSubmit","values","submitProps","some","item","toUpperCase","setSubmitting","getWeatherDataAndAddCity","errors","touched","handleChange","updateStatus","isSubmitting","value","placeholder","onChange","onBlur","disabled","CitiesItemWrapper","li","CitiesItem","cityItem","stopPropagation","removeAndChangeCity","dataId","deleteIcon","CitiesWrapper","Cities","map","key","isRequestSuccess","finally","PreloaderWrapper","Preloader","preloader","GlobalStyle","createGlobalStyle","AppWrapper","initializeApp","console","warn","message","useEffect","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f6dd96ea.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import axios from \"axios\";\r\n\r\nconst API_KEY = 'bc4b5b106eb4f6a33bb5c03f83e1937c';\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://api.openweathermap.org/data/2.5/'\r\n});\r\n\r\nconst API = {\r\n    getWeather(city) {\r\n        return instance\r\n            .get(`weather?q=${city}&appid=${API_KEY}&units=metric&lang=en`)\r\n            .then((response) => {\r\n                return response.data;\r\n            });\r\n    },\r\n    getUserCity() {\r\n        return axios.get('https://api.ipify.org')\r\n            .then(({data}) => data)\r\n            .then(ip => {\r\n                return axios.get(`https://geo.ipify.org/api/v1?apiKey=at_zXucZUJUMQM2jv4zPDkZKqZook3Xw&ipAddress=${ip}`)\r\n                    .then(response => response.data.location.city)\r\n            });\r\n    }\r\n};\r\n\r\nexport default API;\r\n","import API from \"../api/api\";\r\nimport { v4 as getUnicalId } from \"uuid\";\r\n\r\nconst SET_THEME = 'SET-THEME';\r\nconst SET_WEATHER_DATA = 'SET-WEATHER-DATA';\r\nconst SET_CURRENT_CITY = 'SET-CURRENT-CITY';\r\nconst SET_REQUEST_STATUS = 'SET-REQUEST-STATUS';\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED-SUCCESS';\r\nconst ADD_CITY = 'ADD-CITY';\r\nconst REMOVE_CITY = 'REMOVE-CITY';\r\nconst CHECK_IS_SINGLE_CITY = 'CHECK-IS-SINGLE-CITY';\r\n\r\nconst initialState = {\r\n    themes: {\r\n        light: {\r\n            name: \"light\",\r\n            styles: {\r\n                primary: \"#363434\",\r\n                background: \"#FFFFFF\",\r\n                appBackground:\r\n                    \"linear-gradient(180deg, rgba(155, 245, 240, 0.8) 0%, rgba(141, 240, 169, 0.8) 100%)\",\r\n                burger: \"#333232\",\r\n                shadow: \"4px 4px 8px 0px rgba(34, 60, 80, 0.2)\",\r\n                toggler: {\r\n                    container: \"#284c54\",\r\n                    circle: \"#FFFFFF\",\r\n                },\r\n                input: {\r\n                    color: \"#363434\",\r\n                    background: \"#FFFFFF\",\r\n                },\r\n                button: {\r\n                    color: \"#FFFFFF\",\r\n                    background: \"#33cfb2;\",\r\n                },\r\n                cities: {\r\n                    background: \"rgba(27, 26, 26, 0.15)\",\r\n                },\r\n            },\r\n        },\r\n        dark: {\r\n            name: \"dark\",\r\n            styles: {\r\n                primary: \"#FFFFFF\",\r\n                shadow: \"4px 4px 8px 0px #320f52\",\r\n                background: \"#232323\",\r\n                burger: \"#FFFFFF\",\r\n                appBackground:\r\n                    \"linear-gradient(180deg, rgba(16, 16, 16, 0.9) 0%, rgba(14, 11, 16, 0.9) 100%)\",\r\n                toggler: {\r\n                    container: \"#232323\",\r\n                    circle: \"#FFFFFF\",\r\n                },\r\n                cities: {\r\n                    background: \"rgba(27, 26, 26, 0.95)\",\r\n                },\r\n                input: {\r\n                    color: \"#363434\",\r\n                    background: \"#FFFFFF\",\r\n                },\r\n                button: {\r\n                    color: \"#FFFFFF\",\r\n                    background: \"#4e1390\",\r\n                },\r\n            },\r\n        },\r\n    },\r\n    theme: {\r\n        name: \"dark\",\r\n        styles: {\r\n            primary: \"#FFFFFF\",\r\n            burger: \"#FFFFFF\",\r\n            shadow: \"4px 4px 8px 0px #320f52\",\r\n            background: \"#232323\",\r\n            appBackground:\r\n                \"linear-gradient(180deg, rgba(16, 16, 16, 0.9) 0%, rgba(14, 11, 16, 0.9) 100%)\",\r\n            toggler: {\r\n                container: \"#232323\",\r\n                circle: \"#FFFFFF\",\r\n            },\r\n            cities: {\r\n                background: \"rgba(27, 26, 26, 0.95)\",\r\n            },\r\n            input: {\r\n                color: \"#363434\",\r\n                background: \"#FFFFFF\",\r\n            },\r\n            button: {\r\n                color: \"#FFFFFF\",\r\n                background: \"#4e1390\",\r\n            },\r\n        },\r\n    },\r\n    isSingleCity: true,\r\n    currentCity: {\r\n        id: '',\r\n        name: ''\r\n    },\r\n    weather: {\r\n        city: '...',\r\n        status: '...',\r\n        temperature: '...',\r\n        imageCode: '',\r\n    },\r\n    cities: [],\r\n    initialized: false,\r\n    requestStatus: false,\r\n};\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_THEME: {\r\n            return {\r\n                ...state,\r\n                theme: action.theme,\r\n            };\r\n        }\r\n        case SET_WEATHER_DATA: {\r\n            return {\r\n                ...state,\r\n                weather: action.weather,\r\n            };\r\n        }\r\n        case INITIALIZED_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                initialized: true,\r\n            };\r\n        }\r\n        case SET_CURRENT_CITY: {\r\n            return {\r\n                ...state,\r\n                currentCity: action.currentCity,\r\n            };\r\n        }\r\n        case ADD_CITY: {\r\n            return {\r\n                ...state,\r\n                cities: [...state.cities, action.city],\r\n            };\r\n        }\r\n        case REMOVE_CITY: {\r\n            return {\r\n                ...state,\r\n                cities: state.cities.filter((city) => {\r\n                    return city.id !== action.id;\r\n                }),\r\n            };\r\n        }\r\n        case CHECK_IS_SINGLE_CITY: {\r\n            return {\r\n                ...state,\r\n                isSingleCity: state.cities.length === 1,\r\n            };\r\n        }\r\n        case SET_REQUEST_STATUS: {\r\n            return {\r\n                ...state,\r\n                requestStatus: action.requestStatus,\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const addCity = (city) => {\r\n    return {\r\n        type: ADD_CITY,\r\n        city: {\r\n            name: city,\r\n            id: getUnicalId()\r\n        },\r\n    };\r\n};\r\n\r\nexport const pickCity = (city) => {\r\n    return (dispatch) => {\r\n        dispatch(setCurrentCity(city));\r\n        dispatch(getWeatherData(city));\r\n    };\r\n};\r\n\r\nexport const getWeatherDataAndAddCity = (city, setSubmitting, setStatus) => {\r\n    return (dispatch) => {\r\n        return API.getWeather(city)\r\n            .then((data) => {\r\n                if (data.cod === 200) {\r\n                    const weatherData = {\r\n                        city: data.name,\r\n                        status: data.weather[0].description,\r\n                        temperature: data.main.temp,\r\n                        imageCode: data.weather[0].icon,\r\n                    };\r\n                    dispatch(setRequestStatus(true));\r\n                    return weatherData;\r\n                }\r\n            })\r\n            .then(weatherData => {\r\n                dispatch(setCurrentCity(city));\r\n                dispatch(setWeatherData(weatherData));\r\n                dispatch(addCity(city));\r\n                dispatch(checkIsSingleCity());\r\n            })\r\n            .catch((e) => {\r\n                dispatch(setRequestStatus(false));\r\n                setStatus('The city does not exist');\r\n            })\r\n            .finally(() => setSubmitting(false))\r\n    };\r\n};\r\n\r\nexport const removeAndChangeCity = (id, city, currentCity, cities) => {\r\n    return (dispatch) => {\r\n        dispatch(removeCity(id));\r\n\r\n        if (currentCity.name === city) {\r\n            if (currentCity.name === cities[0].name) dispatch(pickCity(cities[1].name));\r\n            else dispatch(pickCity(cities[0].name));\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const removeCity = (id) => {\r\n    return {\r\n        type: REMOVE_CITY,\r\n        id: id,\r\n    };\r\n};\r\n\r\nexport const setTheme = (theme) => {\r\n    return {\r\n        type: SET_THEME,\r\n        theme: theme,\r\n    };\r\n};\r\n\r\nconst setWeatherData = (data) => {\r\n    return {\r\n        type: SET_WEATHER_DATA,\r\n        weather: { ...data },\r\n    };\r\n};\r\n\r\nexport const getWeatherData = (city) => {\r\n    return (dispatch) => {\r\n        return API.getWeather(city)\r\n            .then((data) => {\r\n                if (data.cod === 200) {\r\n                    const weatherData = {\r\n                        city: data.name,\r\n                        status: data.weather[0].description,\r\n                        temperature: data.main.temp,\r\n                        imageCode: data.weather[0].icon,\r\n                    };\r\n                    dispatch(setRequestStatus(true));\r\n                    return weatherData;\r\n                }\r\n            })\r\n            .then(weatherData => {\r\n                dispatch(setWeatherData(weatherData));\r\n            })\r\n            .catch((e) => {\r\n                dispatch(setRequestStatus(false));\r\n            })\r\n    };\r\n};\r\n\r\nconst setRequestStatus = (status) => {\r\n    return {\r\n        type: SET_REQUEST_STATUS,\r\n        requestStatus: status,\r\n    };\r\n};\r\n\r\nexport const setCurrentCity = (city) => {\r\n    return {\r\n        type: SET_CURRENT_CITY,\r\n        currentCity: city\r\n    };\r\n};\r\n\r\nexport const checkIsSingleCity = () => {\r\n    return {\r\n        type: CHECK_IS_SINGLE_CITY,\r\n    };\r\n};\r\n\r\nconst initializingSuccess = () => ({ type: INITIALIZED_SUCCESS });\r\n\r\nexport const initializeApp = () => {\r\n    return (dispatch) => {\r\n        API.getUserCity()\r\n            .then(city => {\r\n                dispatch(setCurrentCity(city));\r\n                dispatch(getWeatherData(city))\r\n                    .then(() => dispatch(addCity(city)))\r\n                    .catch(e => console.warn(e.message))\r\n                    .finally(() => {\r\n                        dispatch(initializingSuccess())\r\n                    })\r\n            })\r\n\r\n    }\r\n};\r\n\r\nexport default appReducer;","import { applyMiddleware, createStore } from 'redux';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport appReducer from './app-reducer';\r\n\r\nconst store = createStore(appReducer, applyMiddleware(thunkMiddleware));\r\n\r\nwindow.store = store;\r\n\r\nexport default store;","import { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst ThemeTogglerWrapper = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: flex-start;\r\n    background-color: ${props => props.theme.toggler.container || '#000000'};\r\n    border-radius: 10px;\r\n    margin-left: auto;\r\n    width: 44px;\r\n    height: 22px;\r\n    cursor: pointer;\r\n\ttransition: background-color .8s;\r\n\r\n    .Circle {\r\n        background-color: ${props => props.theme.toggler.circle || '#000000'};\r\n        border-radius: 50%;\r\n        width: 15px;\r\n        height: 15px;\r\n        margin-left: 3px;\r\n        transition: background-color .8s, margin .5s ease-out;\r\n    }\r\n`;\r\n\r\nconst ThemeToggler = (props) => {\r\n    const [isLightTheme, setIsLightTheme] = useState(false);\r\n    \r\n    const handleClick = (e) => {\r\n        setIsLightTheme(!isLightTheme);\r\n        props.toggleTheme();\r\n    }\r\n\r\n    return (\r\n        <ThemeTogglerWrapper theme={props.theme} className=\"Toggler\" onClick={handleClick}>\r\n            <div className=\"Circle\" style={isLightTheme ? {marginLeft: 26} : {}}/>\r\n        </ThemeTogglerWrapper>\r\n    );\r\n};\r\n\r\nexport default ThemeToggler;","import { connect } from \"react-redux\";\r\nimport { setTheme } from \"../../../redux/app-reducer\";\r\nimport ThemeToggler from \"./ThemeToggler\";\r\n\r\nconst ThemeTogglerContainer = (props) => {\r\n    const toggleTheme = () => {\r\n        if (props.theme.name === props.themes.light.name) {\r\n            props.setTheme(props.themes.dark);\r\n        } else {\r\n            props.setTheme(props.themes.light);\r\n        }\r\n    };\r\n    return <ThemeToggler theme={props.theme.styles} toggleTheme={toggleTheme}/>;\r\n    \r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        theme: state.theme,\r\n        themes: state.themes,\r\n\t}\r\n}\r\n\r\nexport default connect(mapStateToProps, { setTheme })(ThemeTogglerContainer);","import ThemeTogglerContainer from \"./ThemeToggler/ThemeTogglerContainer\";\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <header>\r\n            <ThemeTogglerContainer />\r\n        </header>\r\n    );\r\n};\r\n\r\nexport default Header;","import styled from \"styled-components\";\r\n\r\nconst InfoWrapper = styled.div`\r\n    text-align: center;\r\n    margin-bottom: 75px;\r\n    padding-top: 100px;\r\n\r\n    .Location {\r\n        font-weight: 100;\r\n        font-size: 48px;\r\n        line-height: 56px;\r\n        margin-bottom: 40px;\r\n    }\r\n    .Img {\r\n        margin-right: 25px;\r\n    }\r\n    .Date {\r\n        font-weight: 500;\r\n        font-size: 24px;\r\n        line-height: 28px;\r\n        margin-left: 25px;\r\n\r\n        p {\r\n            margin: 10px 0;\r\n        }\r\n    }\r\n    .Degree {\r\n        font-weight: bold;\r\n        font-size: 72px;\r\n        line-height: 84px;\r\n    }\r\n    .Status {\r\n        font-weight: 500;\r\n        font-size: 20px;\r\n        text-transform: capitalize;\r\n    }\r\n    .Today {\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        flex-wrap: wrap;\r\n        margin-bottom: 40px;\r\n    }\r\n`;\r\n\r\nconst Info = (props) => {\r\n    const imgBaseUrl = 'http://openweathermap.org/img/wn/';\r\n    return (\r\n        <InfoWrapper className=\"Info\">\r\n            <div className=\"Location\">{props.currentCity}</div>\r\n            <div className=\"Today\">\r\n                <div className=\"Img\">\r\n                    <img src={`${imgBaseUrl}${props.weather.imageCode}@2x.png`} alt={props.weather.status} />\r\n                </div>\r\n                <div className=\"Date\">\r\n                    <p>\r\n                        {`${props.dateData.weekday}, ${props.dateData.day} ${props.dateData.month}`}\r\n                    </p>\r\n                    <p>\r\n                        <time>{`${props.dateData.hours}:${props.dateData.minutes}`}</time>\r\n                    </p>\r\n                </div>\r\n            </div>\r\n            <div className=\"Degree\">{Math.round(props.weather.temperature)}°C</div>\r\n            <div className=\"Status\">{props.weather.status}</div>\r\n        </InfoWrapper>\r\n    );\r\n};\r\n\r\nexport default Info;","import { connect } from \"react-redux\"\r\nimport Info from \"./Info\";\r\n\r\nconst InfoContainer = (props) => {\r\n    \r\n    let date = new Date();\r\n    const dateData = {\r\n        day: date.getDate(),\r\n        weekday: new Intl.DateTimeFormat('en-US', { weekday: 'long' }).format(date.getDate()),\r\n        month: date.toLocaleString('default', { month: 'long' }),\r\n        hours: ('0' + date.getHours()).slice(-2),\r\n        minutes: ('0' + date.getMinutes()).slice(-2),\r\n    };\r\n\r\n    return (\r\n        <Info dateData={dateData} weather={props.weather} currentCity={props.currentCity}/>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        weather: state.weather,\r\n        currentCity: state.currentCity\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {})(InfoContainer);\r\n","import styled from 'styled-components';\r\n\r\nconst ButtonWrapper = styled.button`\r\n    background-color: ${props => props.itemBackground || '#FFFFFF'};\r\n    color: ${props => props.itemColor || '#000000'};\r\n    padding: 5px 10px;\r\n    font-weight: 700;\r\n    font-size: 16px;\r\n    line-height: 1.1;\r\n    border: none;\r\n    box-shadow: ${props => props.shadow || 'none'};\r\n`\r\n\r\nconst Button = (props) => {\r\n    return (\r\n        <ButtonWrapper {...props}>{props.children}</ButtonWrapper>\r\n    )\r\n}\r\n\r\nexport default Button;","import styled from 'styled-components';\r\n\r\nconst InputWrapper = styled.input`\r\n    background-color: ${props => props.itemBackground || '#FFFFFF'};\r\n    color: ${props => props.itemColor || '#000000'};\r\n    border: none;\r\n    padding: 5px 10px;\r\n    outline-color: ${props => props.itemBackground || '#FFFFFF'};\r\n    font-size: 16px;\r\n    line-height: 1.1;\r\n    box-shadow: ${props => props.shadow || 'none'};\r\n`\r\n\r\nconst Input = (props) => {\r\n    return (\r\n        <InputWrapper {...props}/>\r\n    )\r\n}\r\n\r\nexport default Input;","import styled from \"styled-components\";\r\nimport { Form, Formik } from \"formik\";\r\nimport Button from \"../../UI/Button\";\r\nimport Input from \"../../UI/Input\";\r\nimport * as yup from \"yup\";\r\nimport {useState} from \"react\";\r\n\r\nconst CitiesFormWrapper = styled.div`\r\n    margin-bottom: 30px;\r\n\r\n    input {\r\n        width: 66.666%;\r\n        box-shadow: ${props => props.theme.shadow};\r\n        border: 1px transparent;\r\n          &.invalid {\r\n                border-color: red;\r\n            }\r\n    }\r\n\r\n    button {\r\n        width: 33.333%;\r\n\r\n        &:disabled {\r\n            opacity: .5;\r\n        }\r\n    }\r\n\r\n    .error {\r\n        color: red;\r\n        margin-top: 10px;\r\n        line-height: 1;\r\n        font-size: 16px;\r\n        min-height: 25px;\r\n        font-style: italic;\r\n    }\r\n`;\r\n\r\nconst CitiesForm = (props) => {\r\n    const [status, setStatus] = useState('');\r\n\r\n    const validationSchema = yup.object().shape({\r\n        city: yup\r\n            .string()\r\n            .strict()\r\n            .matches(/^[A-Za-z]+$/, 'Please enter a city name, without numbers (In english)')\r\n            .typeError('Please enter a city name, without numbers')\r\n            .required('')\r\n            .max(58, 'City must be at most 58 characters')\r\n            .min(2, 'City must be at least 2 characters')\r\n    });\r\n\r\n    const addCity = (values, submitProps) => {\r\n        const isCityAlreadyExist = props.cities.some((item) => item.name.toUpperCase() === values.city.toUpperCase());\r\n\r\n        if (!isCityAlreadyExist) {\r\n            props.getWeatherDataAndAddCity(values.city, submitProps.setSubmitting, setStatus);\r\n            values.city = '';\r\n            setStatus('');\r\n        } else {\r\n            submitProps.setSubmitting(false);\r\n            setStatus(`The ${values.city} is already added to your cities`);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <CitiesFormWrapper className=\"CitiesForm\" theme={props.theme}>\r\n            <Formik\r\n                initialValues={{ city: '' }}\r\n                validationSchema={validationSchema}\r\n                onSubmit={(values, submitProps) => addCity(values, submitProps)}>\r\n                {({\r\n                    values,\r\n                    errors,\r\n                    touched,\r\n                    handleChange,\r\n                    updateStatus = (e) => {\r\n                        handleChange(e);\r\n                        setStatus('');\r\n                    },\r\n                    isSubmitting\r\n                }) => (\r\n                    <Form>\r\n                        <Input\r\n                            name=\"city\"\r\n                            type=\"text\"\r\n                            value={values.city}\r\n                            placeholder=\"Enter city name\"\r\n                            itemBackground={props.theme.input.background}\r\n                            itemColor={props.theme.input.color}\r\n                            onChange={updateStatus}\r\n                            onBlur={() => setStatus('')}\r\n                            className={touched.city && errors.city && 'invalid'}\r\n                        />\r\n                        <Button\r\n                            disabled={isSubmitting}\r\n                            type=\"submit\"\r\n                            itemBackground={props.theme.button.background}\r\n                            itemColor={props.theme.button.color}\r\n                            shadow={props.theme.shadow}\r\n                        >\r\n                            Add\r\n                        </Button>\r\n                        <div className=\"error\">{status || errors.city}</div>\r\n                    </Form>\r\n                )}\r\n            </Formik>\r\n        </CitiesFormWrapper>\r\n    );\r\n};\r\n\r\nexport default CitiesForm;","export default __webpack_public_path__ + \"static/media/remove.562b6f7b.svg\";","import styled from \"styled-components\";\r\nimport deleteIcon from \"../../../assets/images/remove.svg\";\r\n\r\nconst CitiesItemWrapper = styled.li`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    word-break: break-all;\r\n    font-weight: 500;\r\n    font-size: 18px;\r\n    line-height: 30px;\r\n    cursor: pointer;\r\n    padding: 15px 0;\r\n\r\n    .Delete {\r\n        width: 30px;\r\n        height: 30px;\r\n        flex-shrink: 0;\r\n    }\r\n`;\r\n\r\nconst CitiesItem = (props) => {\r\n    const cityItem = props.children;\r\n    const pickCity = () => {\r\n        if (!props.isSingleCity || props.currentCity.name !== cityItem)\r\n            props.pickCity(cityItem);\r\n    }\r\n    const removeCity = (e) => {\r\n        e.stopPropagation();\r\n\r\n        if (!props.isSingleCity) props.removeAndChangeCity(props.dataId, cityItem, props.currentCity, props.cities);\r\n        props.checkIsSingleCity();\r\n    }\r\n    return (\r\n        <CitiesItemWrapper onClick={pickCity} className=\"Item\">\r\n            <span>{props.children}</span>\r\n            {!props.isSingleCity && \r\n                <span className=\"Delete\" onClick={removeCity}>\r\n                    <img src={deleteIcon} alt=\"Delete city\" />\r\n                </span>\r\n            }\r\n        </CitiesItemWrapper>\r\n    );\r\n};\r\n\r\nexport default CitiesItem;\r\n","import styled from \"styled-components\";\r\nimport CitiesForm from './CitiesForm/CitiesForm';\r\nimport CitiesItem from \"./CitiesItem/CitiesItem\";\r\n\r\nconst CitiesWrapper = styled.div`\r\n    .Title {\r\n        font-weight: 300;\r\n        font-size: 36px;\r\n        line-height: 42px;\r\n        margin-bottom: 15px;\r\n        text-align: center;\r\n    }\r\n    .List {\r\n        padding: 20px;\r\n        border-radius: 10px;\r\n        background: ${props => props.theme.cities.background || ' rgba(27, 26, 26, 0.15)'};\r\n    }\r\n`;\r\n\r\nconst Cities = (props) => {\r\n    const cities = props.cities.map((item) => <CitiesItem {...props} dataId={item.id} key={item.id} >{item.name}</CitiesItem>);\r\n\r\n    return (\r\n        <CitiesWrapper className=\"Cities\" theme={props.theme}>\r\n            <div className=\"Title\">Your cities</div>\r\n            <CitiesForm isRequestSuccess={props.isRequestSuccess} cities={props.cities} theme={props.theme} getWeatherDataAndAddCity={props.getWeatherDataAndAddCity}/>\r\n            <ul className=\"List\">\r\n                {cities}\r\n            </ul>\r\n        </CitiesWrapper>\r\n    );\r\n};\r\n\r\nexport default Cities;\r\n","import { connect } from \"react-redux\";\r\nimport {pickCity, getWeatherDataAndAddCity, removeAndChangeCity, checkIsSingleCity} from \"../../redux/app-reducer\";\r\nimport Cities from \"./Cities\";\r\n\r\nconst CitiesContainer = (props) => {\r\n    return (\r\n        <Cities {...props}/>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        theme: state.theme.styles,\r\n        cities: state.cities,\r\n        isSingleCity: state.isSingleCity,\r\n        currentCity: state.currentCity,\r\n        isRequestSuccess: state.isRequestSuccess\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { pickCity, getWeatherDataAndAddCity, removeAndChangeCity, checkIsSingleCity })(CitiesContainer);","export default __webpack_public_path__ + \"static/media/preloader.6aaff771.svg\";","import styled from 'styled-components';\r\nimport preloader from '../../assets/images/preloader.svg';\r\n\r\nconst PreloaderWrapper = styled.div`\r\n    position: fixed;\r\n    left: 50%;\r\n    top: 50%;\r\n    transform: translate(-50%, -50%);\r\n    img {\r\n        width: 300px;\r\n    }\r\n`;\r\n\r\nconst Preloader = (props) => {\r\n    return (\r\n        <PreloaderWrapper>\r\n            <img src={preloader} alt='Loading...' />\r\n        </PreloaderWrapper>\r\n    )\r\n}\r\n\r\nexport default Preloader;","import styled, {createGlobalStyle} from 'styled-components';\r\nimport Header from './components/Header/Header';\r\nimport InfoContainer from './components/Info/InfoContainer';\r\nimport CitiesContainer from './components/Cities/CitiesContainer';\r\nimport {connect} from \"react-redux\";\r\nimport {initializeApp} from \"./redux/app-reducer\";\r\nimport {useEffect} from \"react\";\r\nimport Preloader from \"./components/UI/Preloader\";\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n\thtml {\r\n\t\tbox-sizing: border-box;\r\n\t}\r\n\r\n\t*,\r\n\t*::before,\r\n\t*::after {\r\n\t\tbox-sizing: inherit;\r\n\t}\r\n\r\n\tbody {\r\n\t\tfont-family: Roboto, sans-serif;\r\n\t\tfont-weight: 400;\r\n\t\t-webkit-font-smoothing: antialiased;\r\n\t\t-moz-osx-font-smoothing: grayscale;\r\n\t\tcolor: ${props => props.theme.primary || '#000000'};\r\n\t\tbackground-color: ${props => props.theme.background || '#FFFFFF'};\r\n\t\ttransition: color .4s ease-in-out, background-color .5s ease-in-out;\r\n\t}\r\n\r\n\timg {\r\n\t\tdisplay: flex;\r\n\t\tmax-width: 100%;\r\n\t}\r\n\r\n\ta,\r\n\tbutton {\r\n\t\tcursor: pointer;\r\n\t}\r\n\t\r\n\ta,\r\n\tbutton,\r\n\tinput,\r\n\ttextarea,\r\n\tspan {\r\n\t\tdisplay: inline-block;\r\n\t}\r\n`;\r\n\r\nconst AppWrapper = styled.div`\r\n\tbackground: ${props => props.theme.appBackground};\r\n\tmax-width: 800px;\r\n\twidth: 100%;\r\n\tborder-radius: 15px;\r\n\tpadding: 30px;\r\n\tmargin: 30px auto;\r\n`;\r\n\r\nconst App = (props) => {\r\n\tuseEffect(() => {\r\n\t\tprops.initializeApp();\r\n\t},[ ])\r\n\r\n\tif (!props.initialized) { return <Preloader /> }\r\n\telse {\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<AppWrapper theme={props.theme} className=\"App\">\r\n\t\t\t\t\t<Header />\r\n\t\t\t\t\t<InfoContainer />\r\n\t\t\t\t\t<CitiesContainer />\r\n\t\t\t\t</AppWrapper>\r\n\t\t\t\t<GlobalStyle theme={props.theme}/>\r\n\t\t\t</>\r\n\t\t)\r\n\t}\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\ttheme: state.theme.styles,\r\n\t\tcurrentCity: state.currentCity,\r\n\t\tinitialized: state.initialized,\r\n\t}\r\n}\r\n\r\nexport default connect(mapStateToProps, { initializeApp })(App);","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'reset-css';\r\nimport store from './redux/store';\r\nimport { Provider } from 'react-redux';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n\t<Provider store={store}>\r\n\t\t<App />\r\n\t</Provider>,\r\n\tdocument.getElementById(\"root\"));\r\n\r\nreportWebVitals();"],"sourceRoot":""}