{"version":3,"sources":["reportWebVitals.js","api/api.js","redux/app-reducer.js","redux/store.js","components/Header/Menu/Burger.jsx","components/Header/Menu/BurgerContainer.jsx","components/Header/Menu/Menu.jsx","components/Header/ThemeToggler/ThemeToggler.jsx","components/Header/ThemeToggler/ThemeTogglerContainer.jsx","components/Header/Header.jsx","components/Info/Info.jsx","components/Info/InfoContainer.jsx","assets/images/remove.svg","components/Cities/CitiesItem/CitiesItem.jsx","components/UI/Button.jsx","components/UI/Input.jsx","components/Cities/Cities.jsx","components/Cities/CitiesContainer.jsx","App.js","assets/images/preloader.svg","components/UI/Preloader.jsx","AppContainer.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","instance","axios","create","baseURL","API","getWeather","city","get","response","data","SET_THEME","SET_WEATHER_DATA","SET_CURRENT_CITY","INITIALIZED_SUCCESS","ADD_CITY","REMOVE_CITY","CHECK_IS_SINGLE_CITY","initialState","themes","light","name","styles","primary","background","appBackground","burger","shadow","toggler","container","circle","input","color","button","cities","dark","theme","isSingleCity","currentCity","weather","status","temperature","imageCode","initialized","addCity","type","id","getUnicalId","setCurrentCity","getWeatherData","dispatch","weatherData","description","main","temp","icon","setWeatherData","appReducer","state","action","filter","length","store","createStore","applyMiddleware","thunkMiddleware","window","BurgerWrapper","styled","props","Burger","className","connect","Menu","ThemeTogglerWrapper","div","ThemeToggler","useState","togglerCircle","moveTogglerCircle","onClick","e","toggleTheme","style","marginLeft","setTheme","HeaderStyles","header","Header","InfoWrapper","Info","src","alt","dateData","weekday","day","month","hours","minutes","Math","round","date","Date","getDate","Intl","DateTimeFormat","format","toLocaleString","getHours","slice","getMinutes","CitiesItemWrapper","li","CitiesItem","pickCity","children","stopPropagation","removeCity","dataId","checkIsSingleCity","deleteIcon","ButtonWrapper","itemBackground","itemColor","Button","InputWrapper","Input","CitiesWrapper","Cities","newCity","setNewCity","map","item","onSubmit","preventDefault","value","onChange","target","AppWrapper","App","PreloaderWrapper","Preloader","preloader","GlobalStyle","createGlobalStyle","initializeApp","promises","Promise","all","useEffect","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ebb25e22.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import axios from 'axios';\r\n\r\nconst API_KEY = 'bc4b5b106eb4f6a33bb5c03f83e1937c';\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://api.openweathermap.org/data/2.5/',\r\n});\r\n\r\nconst API = {\r\n    getWeather(city) {\r\n        return instance.get(`weather?q=${city}&appid=${API_KEY}&units=metric`)\r\n        .then(response => {\r\n            return response.data;\r\n        })\r\n    }\r\n}\r\n\r\nexport default API;","import API from \"../api/api\";\r\nimport { v4 as getUnicalId } from 'uuid';\r\n\r\nconst SET_THEME = \"SET-THEME\";\r\nconst SET_WEATHER_DATA = \"SET-WEATHER-DATA\";\r\nconst SET_CURRENT_CITY = \"SET-CURRENT-CITY\";\r\nconst INITIALIZED_SUCCESS = \"INITIALIZED-SUCCESS\";\r\nconst ADD_CITY = \"ADD-CITY\";\r\nconst REMOVE_CITY = \"REMOVE-CITY\";\r\nconst CHECK_IS_SINGLE_CITY = \"CHECK-IS-SINGLE-CITY\";\r\n\r\nconst initialState = {\r\n    themes: {\r\n        light: {\r\n            name: \"light\",\r\n            styles: {\r\n                primary: \"#363434\",\r\n                background: \"#FFFFFF\",\r\n                appBackground: \"linear-gradient(180deg, rgba(155, 245, 240, 0.8) 0%, rgba(141, 240, 169, 0.8) 100%)\",\r\n                burger: \"#333232\",\r\n                shadow: \"4px 4px 8px 0px rgba(34, 60, 80, 0.2)\",\r\n                toggler: {\r\n                    container: \"#284c54\",\r\n                    circle: \"#FFFFFF\",\r\n                },\r\n                input: {\r\n                    color: \"#363434\",\r\n                    background: \"#FFFFFF\",\r\n                },\r\n                button: {\r\n                    color: \"#FFFFFF\",\r\n                    background: \"#33cfb2;\",\r\n                },\r\n                cities: {\r\n                    background: \"rgba(27, 26, 26, 0.15)\",\r\n                }\r\n                \r\n            },\r\n        },\r\n        dark: {\r\n            name: \"dark\",\r\n            styles: {\r\n                primary: \"#FFFFFF\",\r\n                shadow: \"4px 4px 8px 0px #320f52\",\r\n                background: \"#232323\",\r\n                burger: \"#FFFFFF\",\r\n                appBackground: \"linear-gradient(180deg, rgba(16, 16, 16, 0.9) 0%, rgba(14, 11, 16, 0.9) 100%)\",\r\n                toggler: {\r\n                    container: \"#232323\",\r\n                    circle: \"#FFFFFF\",\r\n                },\r\n                cities: {\r\n                    background: \"rgba(27, 26, 26, 0.95)\",\r\n                },\r\n                input: {\r\n                    color: \"#363434\",\r\n                    background: \"#FFFFFF\",\r\n                },\r\n                button: {\r\n                    color: \"#FFFFFF\",\r\n                    background: \"#4e1390\",\r\n                },\r\n            },\r\n        },\r\n    },\r\n    theme: {\r\n        name: \"dark\",\r\n        styles: {\r\n            primary: \"#FFFFFF\",\r\n            burger: \"#FFFFFF\",\r\n            shadow: \"4px 4px 8px 0px #320f52\",\r\n            background: \"#232323\",\r\n            appBackground: \"linear-gradient(180deg, rgba(16, 16, 16, 0.9) 0%, rgba(14, 11, 16, 0.9) 100%)\",\r\n            toggler: {\r\n                container: \"#232323\",\r\n                circle: \"#FFFFFF\",\r\n            },\r\n            cities: {\r\n                background: \"rgba(27, 26, 26, 0.95)\",\r\n            },\r\n            input: {\r\n                color: \"#363434\",\r\n                background: \"#FFFFFF\",\r\n            },\r\n            button: {\r\n                color: \"#FFFFFF\",\r\n                background: \"#4e1390\",\r\n            },\r\n        },\r\n    },\r\n    isSingleCity: true,\r\n    currentCity: \"\",\r\n    weather: {\r\n        city: \"...\",\r\n        status: \"...\",\r\n        temperature: \"...\",\r\n        imageCode: \"\",\r\n    },\r\n    cities: [],\r\n    initialized: false,\r\n};\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_THEME: {\r\n            return {\r\n                ...state,\r\n                theme: action.theme,\r\n            };\r\n        }\r\n        case SET_WEATHER_DATA: {\r\n            return {\r\n                ...state,\r\n                weather: action.weather,\r\n            };\r\n        }\r\n        case INITIALIZED_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                initialized: true,\r\n            };\r\n        }\r\n        case SET_CURRENT_CITY: {\r\n            return {\r\n                ...state,\r\n                currentCity: action.currentCity,\r\n            };\r\n        }\r\n        case ADD_CITY: {\r\n            return {\r\n                ...state,\r\n                cities: [...state.cities, action.city],\r\n            };\r\n        }\r\n        case REMOVE_CITY: {\r\n            return {\r\n                ...state,\r\n                cities: state.cities.filter((city) => {\r\n                    return city.id !== action.id;\r\n                }),\r\n            };\r\n        }\r\n        case CHECK_IS_SINGLE_CITY: {\r\n            return {\r\n                ...state,\r\n                isSingleCity: state.cities.length === 1\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const addCity = (city) => {\r\n    return {\r\n        type: ADD_CITY,\r\n        city: {\r\n            name: city,\r\n            id: getUnicalId(),\r\n        },\r\n    };\r\n};\r\n\r\nexport const removeCity = (id) => {\r\n    return {\r\n        type: REMOVE_CITY,\r\n        id: id,\r\n    }\r\n}\r\n\r\nexport const setTheme = (theme) => {\r\n    return {\r\n        type: SET_THEME,\r\n        theme: theme,\r\n    };\r\n};\r\n\r\nconst setWeatherData = (data) => {\r\n    return {\r\n        type: SET_WEATHER_DATA,\r\n        weather: { ...data },\r\n    };\r\n};\r\n\r\nexport const setCurrentCity = (city) => {\r\n    return {\r\n        type: SET_CURRENT_CITY,\r\n        currentCity: city,\r\n    };\r\n};\r\n\r\nexport const checkIsSingleCity = () => {\r\n    return {\r\n        type: CHECK_IS_SINGLE_CITY\r\n    }\r\n}\r\n\r\nexport const getWeatherData = (city) => {\r\n    return (dispatch) => {\r\n        return API.getWeather(city).then((data) => {\r\n            const weatherData = {\r\n                city: data.name,\r\n                status: data.weather[0].description,\r\n                temperature: data.main.temp,\r\n                imageCode: data.weather[0].icon,\r\n            };\r\n            dispatch(setWeatherData(weatherData));\r\n        });\r\n    };\r\n};\r\n\r\nexport const pickCity = (city) => {\r\n    return (dispatch) => {\r\n        dispatch(setCurrentCity(city));\r\n        dispatch(getWeatherData(city));\r\n    };\r\n};\r\n\r\nconst initializingSuccess = () => ({ type: INITIALIZED_SUCCESS });\r\n\r\nexport const initializeApp = (city) => {\r\n    return (dispatch) => {\r\n        const promises = [\r\n            dispatch(setCurrentCity(city)),\r\n            dispatch(getWeatherData(city)),\r\n            dispatch(addCity(city)),\r\n        ];\r\n        Promise.all(promises).then(() => dispatch(initializingSuccess()));\r\n    };\r\n};\r\n\r\nexport default appReducer;\r\n","import { applyMiddleware, createStore } from 'redux';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport appReducer from './app-reducer';\r\n\r\nconst store = createStore(appReducer, applyMiddleware(thunkMiddleware));\r\n\r\nwindow.store = store;\r\n\r\nexport default store;","import styled from \"styled-components\";\r\n\r\nconst BurgerWrapper = styled.button`\r\n    display: block;\r\n    width: 30px;\r\n    cursor: pointer;\r\n    border: none;\r\n    padding: 0;\r\n    background-color: transparent;\r\n\r\n    span {\r\n        display: block;\r\n        width: 100%;\r\n        height: 3px;\r\n        margin-bottom: 4px;\r\n        border-radius: 10px;\r\n        background-color: ${props => props.theme.burger};\r\n        transition: background-color .8s;\r\n        \r\n        &:last-child {\r\n            margin-bottom: 0;\r\n        }\r\n    }\r\n`;\r\n\r\nconst Burger = (props) => {\r\n    return (\r\n        <BurgerWrapper theme={props.theme} className=\"Burger\">\r\n            <span></span>\r\n            <span></span>\r\n            <span></span>\r\n        </BurgerWrapper>\r\n    )\r\n}\r\n\r\nexport default Burger;","import { connect } from 'react-redux';\r\nimport Burger from './Burger';\r\n\r\nconst BurgerContainer = (props) => {\r\n    return <Burger theme={props.theme}/>;\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        theme: state.theme.styles,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(BurgerContainer);","import BurgerContainer from './BurgerContainer';\r\n\r\nconst Menu = (props) => {\r\n    return (\r\n        <>\r\n            <BurgerContainer />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Menu;\r\n","import { useState } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst ThemeTogglerWrapper = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: flex-start;\r\n    background-color: ${props => props.theme.toggler.container || '#000000'};\r\n    border-radius: 10px;\r\n    width: 44px;\r\n    height: 22px;\r\n    cursor: pointer;\r\n\ttransition: background-color .8s;\r\n\r\n    .Circle {\r\n        background-color: ${props => props.theme.toggler.circle || '#000000'};\r\n        border-radius: 50%;\r\n        width: 15px;\r\n        height: 15px;\r\n        margin-left: 3px;\r\n        transition: background-color .8s, margin .5s ease-out;\r\n    }\r\n`;\r\n\r\nconst ThemeToggler = (props) => {\r\n    const [togglerCircle, moveTogglerCircle] = useState(false);\r\n    \r\n    const handleClick = (e) => {\r\n        moveTogglerCircle(!togglerCircle);\r\n        props.toggleTheme();\r\n    }\r\n\r\n    return (\r\n        <ThemeTogglerWrapper theme={props.theme} className=\"Toggler\" onClick={handleClick}>\r\n            <div className=\"Circle\" style={togglerCircle ? {marginLeft: 26} : {}}></div>\r\n        </ThemeTogglerWrapper>\r\n    );\r\n};\r\n\r\nexport default ThemeToggler;","import { connect } from 'react-redux';\r\nimport { setTheme } from '../../../redux/app-reducer';\r\nimport ThemeToggler from './ThemeToggler';\r\n\r\nconst ThemeTogglerContainer = (props) => {\r\n    const toggleTheme = () => {\r\n        if (props.theme.name === props.themes.light.name) {\r\n            props.setTheme(props.themes.dark);\r\n        } else {\r\n            props.setTheme(props.themes.light);\r\n        }\r\n    };\r\n    return <ThemeToggler theme={props.theme.styles} toggleTheme={toggleTheme}/>;\r\n    \r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        theme: state.theme,\r\n        themes: state.themes,\r\n\t}\r\n}\r\n\r\nexport default connect(mapStateToProps, { setTheme })(ThemeTogglerContainer);","import styled from \"styled-components\";\r\nimport Menu from \"./Menu/Menu\";\r\nimport ThemeTogglerContainer from \"./ThemeToggler/ThemeTogglerContainer\";\r\n\r\nconst HeaderStyles = styled.header`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n`;\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <HeaderStyles>\r\n            <Menu />\r\n            <ThemeTogglerContainer />\r\n        </HeaderStyles>\r\n    );\r\n};\r\n\r\nexport default Header;","import styled from 'styled-components';\r\n\r\nconst InfoWrapper = styled.div`\r\n    text-align: center;\r\n    margin-bottom: 75px;\r\n    padding-top: 100px;\r\n\r\n    .Location {\r\n        font-weight: 100;\r\n        font-size: 48px;\r\n        line-height: 56px;\r\n        margin-bottom: 40px;\r\n    }\r\n    .Img {\r\n        margin-right: 25px;\r\n    }\r\n    .Date {\r\n        font-weight: 500;\r\n        font-size: 24px;\r\n        line-height: 28px;\r\n        margin-left: 25px;\r\n\r\n        p {\r\n            margin: 10px 0;\r\n        }\r\n    }\r\n    .Degree {\r\n        font-weight: bold;\r\n        font-size: 72px;\r\n        line-height: 84px;\r\n    }\r\n    .Status {\r\n        font-weight: 500;\r\n        font-size: 20px;\r\n        text-transform: capitalize;\r\n    }\r\n    .Today {\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        flex-wrap: wrap;\r\n        margin-bottom: 40px;\r\n    }\r\n`;\r\n\r\nconst Info = (props) => {\r\n    return (\r\n        <InfoWrapper className=\"Info\">\r\n            <div className=\"Location\">{props.weather.city}</div>\r\n            <div className=\"Today\">\r\n                <div className=\"Img\">\r\n                    <img src={`http://openweathermap.org/img/wn/${props.weather.imageCode}@2x.png`} alt={props.weather.status} />\r\n                </div>\r\n                <div className=\"Date\">\r\n                    <p>\r\n                        {`${props.dateData.weekday}, ${props.dateData.day} ${props.dateData.month}`}\r\n                    </p>\r\n                    <p>\r\n                        <time>{`${props.dateData.hours}:${props.dateData.minutes}`}</time>\r\n                    </p>\r\n                </div>\r\n            </div>\r\n            <div className=\"Degree\">{Math.round(props.weather.temperature)}°C</div>\r\n            <div className=\"Status\">{props.weather.status}</div>\r\n        </InfoWrapper>\r\n    );\r\n};\r\n\r\nexport default Info;","import { connect } from 'react-redux';\r\nimport Info from './Info';\r\n\r\nconst InfoContainer = (props) => {\r\n    \r\n    let date = new Date();\r\n    const dateData = {\r\n        day: date.getDate(),\r\n        weekday: new Intl.DateTimeFormat('en-US', { weekday: 'long' }).format(date.getDate()),\r\n        month: date.toLocaleString('default', { month: 'long' }),\r\n        hours: ('0' + date.getHours()).slice(-2),\r\n        minutes: ('0' + date.getMinutes()).slice(-2),\r\n    };\r\n\r\n    return (\r\n        <Info dateData={dateData} weather={props.weather}/>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        weather: state.weather,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {})(InfoContainer);\r\n","export default __webpack_public_path__ + \"static/media/remove.562b6f7b.svg\";","import styled from 'styled-components';\r\nimport deleteIcon from '../../../assets/images/remove.svg';\r\n\r\nconst CitiesItemWrapper = styled.li`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    word-break: break-all;\r\n    font-weight: 500;\r\n    font-size: 18px;\r\n    line-height: 30px;\r\n    cursor: pointer;\r\n    padding: 15px 0;\r\n\r\n    .Delete {\r\n        width: 30px;\r\n        height: 30px;\r\n        flex-shrink: 0;\r\n    }\r\n`;\r\n\r\nconst CitiesItem = (props) => {\r\n    const pickCity = () => {\r\n        if (!props.isSingleCity) props.pickCity(props.children)\r\n    }\r\n    const removeCity = (e) => {\r\n        e.stopPropagation();\r\n        if (!props.isSingleCity) props.removeCity(props.dataId);\r\n        props.checkIsSingleCity();\r\n    }\r\n    return (\r\n        <CitiesItemWrapper onClick={pickCity} className=\"Item\">\r\n            <span>{props.children}</span>\r\n            {!props.isSingleCity && \r\n                <span className=\"Delete\" onClick={removeCity}>\r\n                    <img src={deleteIcon} alt=\"Delete city\" />\r\n                </span>\r\n            }\r\n            \r\n        </CitiesItemWrapper>\r\n    );\r\n};\r\n\r\nexport default CitiesItem;\r\n","import styled from 'styled-components';\r\n\r\nconst ButtonWrapper = styled.button`\r\n    background-color: ${props => props.itemBackground || '#FFFFFF'};\r\n    color: ${props => props.itemColor || '#000000'};\r\n    padding: 5px 10px;\r\n    font-weight: 700;\r\n    font-size: 16px;\r\n    line-height: 1.1;\r\n    border: none;\r\n    box-shadow: ${props => props.shadow || 'none'};\r\n`\r\n\r\nconst Button = (props) => {\r\n    return (\r\n        <ButtonWrapper {...props}>{props.children}</ButtonWrapper>\r\n    )\r\n}\r\n\r\nexport default Button;","import styled from 'styled-components';\r\n\r\nconst InputWrapper = styled.input`\r\n    background-color: ${props => props.itemBackground || '#FFFFFF'};\r\n    color: ${props => props.itemColor || '#000000'};\r\n    border: none;\r\n    padding: 5px 10px;\r\n    outline-color: ${props => props.itemBackground || '#FFFFFF'};\r\n    font-size: 16px;\r\n    line-height: 1.1;\r\n    box-shadow: ${props => props.shadow || 'none'};\r\n`\r\n\r\nconst Input = (props) => {\r\n    return (\r\n        <InputWrapper {...props}/>\r\n    )\r\n}\r\n\r\nexport default Input;","import { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport CitiesItem from \"./CitiesItem/CitiesItem\";\r\nimport Button from \"../UI/Button\";\r\nimport Input from \"../UI/Input\";\r\n\r\nconst CitiesWrapper = styled.div`\r\n    .Title {\r\n        font-weight: 300;\r\n        font-size: 36px;\r\n        line-height: 42px;\r\n        margin-bottom: 15px;\r\n        text-align: center;\r\n    }\r\n    .List {\r\n        padding: 20px;\r\n        border-radius: 10px;\r\n        background: ${props => props.theme.cities.background || ' rgba(27, 26, 26, 0.15)'};\r\n    }\r\n\r\n    .AddCityForm {\r\n        margin-bottom: 30px;\r\n    }\r\n\r\n    input {\r\n        width: 66.666%;\r\n    }\r\n\r\n    button {\r\n        width: 33.333%;\r\n    }\r\n`;\r\n\r\nconst Cities = (props) => {\r\n    const [newCity, setNewCity] = useState('');\r\n\r\n    const onChangeHandler = (e) => {\r\n        setNewCity(e.target.value);\r\n    };\r\n\r\n    const onSubmitHandler = (e) => {\r\n        e.preventDefault();\r\n        // validation conditions ->\r\n        props.addCity(newCity);\r\n        props.pickCity(newCity);\r\n        setNewCity('');\r\n        props.checkIsSingleCity();\r\n    }\r\n\r\n    const cities = props.cities.map((item) => <CitiesItem checkIsSingleCity={props.checkIsSingleCity} isSingleCity={props.isSingleCity} dataId={item.id} key={item.id} removeCity={props.removeCity} pickCity={props.pickCity}>{item.name}</CitiesItem>);\r\n\r\n    return (\r\n        <CitiesWrapper className=\"Cities\" theme={props.theme}>\r\n            <div className=\"Title\">Your cities</div>\r\n            <form className=\"AddCityForm\" action=\"#\" onSubmit={onSubmitHandler}>\r\n                <Input\r\n                    type=\"text\"\r\n                    value={newCity}\r\n                    onChange={onChangeHandler}\r\n                    itemBackground={props.theme.input.background}\r\n                    itemColor={props.theme.input.color}\r\n                />\r\n                <Button itemBackground={props.theme.button.background} itemColor={props.theme.button.color} shadow={props.theme.shadow}>\r\n                    Добавить\r\n                </Button>\r\n            </form>\r\n            <ul className=\"List\">\r\n                {cities}\r\n            </ul>\r\n        </CitiesWrapper>\r\n    );\r\n};\r\n\r\nexport default Cities;\r\n","import { connect } from 'react-redux';\r\nimport { pickCity, addCity, removeCity, checkIsSingleCity } from '../../redux/app-reducer';\r\nimport Cities from './Cities';\r\n\r\nconst CitiesContainer = (props) => {\r\n    return (\r\n        <Cities {...props}/>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        theme: state.theme.styles,\r\n        cities: state.cities,\r\n        isSingleCity: state.isSingleCity,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { pickCity, addCity, removeCity, checkIsSingleCity })(CitiesContainer);","import styled from 'styled-components';\r\nimport Header from './components/Header/Header';\r\nimport InfoContainer from './components/Info/InfoContainer';\r\nimport CitiesContainer from './components/Cities/CitiesContainer';\r\n\r\nconst AppWrapper = styled.div`\r\n\tbackground: ${props => props.theme.appBackground};\r\n\tmax-width: 800px;\r\n\twidth: 100%;\r\n\tborder-radius: 15px;\r\n\tpadding: 30px;\r\n\tmargin: 30px auto;\r\n`;\r\n\r\nconst App = (props) => {\r\n    return (\r\n\t\t<AppWrapper theme={props.theme} className=\"App\">\r\n\t\t\t<Header />\r\n\t\t\t<InfoContainer />\r\n\t\t\t<CitiesContainer />\r\n\t\t</AppWrapper>\r\n    );\r\n};\r\n\r\nexport default App;","export default __webpack_public_path__ + \"static/media/preloader.6aaff771.svg\";","import styled from 'styled-components';\r\nimport preloader from '../../assets/images/preloader.svg';\r\n\r\nconst PreloaderWrapper = styled.div`\r\n    position: fixed;\r\n    left: 50%;\r\n    top: 50%;\r\n    transform: translate(-50%, -50%);\r\n    img {\r\n        width: 300px;\r\n    }\r\n`;\r\n\r\nconst Preloader = (props) => {\r\n    return (\r\n        <PreloaderWrapper>\r\n            <img src={preloader} alt='Loading...' />\r\n        </PreloaderWrapper>\r\n    )\r\n}\r\n\r\nexport default Preloader;","import { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { createGlobalStyle } from 'styled-components';\r\nimport App from './App';\r\nimport Preloader from './components/UI/Preloader';\r\nimport { initializeApp } from './redux/app-reducer';\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n\thtml {\r\n\t\tbox-sizing: border-box;\r\n\t}\r\n\r\n\t*,\r\n\t*::before,\r\n\t*::after {\r\n\t\tbox-sizing: inherit;\r\n\t}\r\n\r\n\tbody {\r\n\t\tfont-family: Roboto, sans-serif;\r\n\t\tfont-weight: 400;\r\n\t\t-webkit-font-smoothing: antialiased;\r\n\t\t-moz-osx-font-smoothing: grayscale;\r\n\t\tcolor: ${props => props.theme.primary || '#000000'};\r\n\t\tbackground-color: ${props => props.theme.background || '#FFFFFF'};\r\n\t\ttransition: color .4s ease-in-out, background-color .5s ease-in-out;\r\n\t}\r\n\r\n\timg {\r\n\t\tdisplay: flex;\r\n\t\tmax-width: 100%;\r\n\t}\r\n\r\n\ta,\r\n\tbutton {\r\n\t\tcursor: pointer;\r\n\t}\r\n\t\r\n\ta,\r\n\tbutton,\r\n\tinput,\r\n\ttextarea,\r\n\tspan {\r\n\t\tdisplay: inline-block;\r\n\t}\r\n`;\r\n\r\nconst AppContainer = (props) => {\r\n\tuseEffect(() => {\r\n\t\tprops.initializeApp('Kostanay');\r\n\t},[])\r\n\r\n\tif (!props.initialized) {return <Preloader /> }\r\n\telse {\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<App theme={props.theme}/>\r\n\t\t\t\t<GlobalStyle theme={props.theme}/>\r\n\t\t\t</>\r\n\t\t)\r\n\t}\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\ttheme: state.theme.styles,\r\n\t\tcurrentCity: state.currentCity,\r\n\t\tinitialized: state.initialized,\r\n\t}\r\n}\r\nexport default connect(mapStateToProps, { initializeApp })(AppContainer);","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'reset-css';\r\nimport store from './redux/store';\r\nimport { Provider } from 'react-redux';\r\nimport AppContainer from './AppContainer';\r\n\r\nReactDOM.render(\r\n\t<Provider store={store}>\r\n\t\t<AppContainer />\r\n\t</Provider>,\r\n\tdocument.getElementById(\"root\"));\r\n\r\nreportWebVitals();"],"sourceRoot":""}