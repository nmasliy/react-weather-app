{"version":3,"sources":["reportWebVitals.js","api/api.js","redux/app-reducer.js","redux/store.js","components/Header/Menu/Burger.jsx","components/Header/Menu/BurgerContainer.jsx","components/Header/Menu/Menu.jsx","components/Header/ThemeToggler/ThemeToggler.jsx","components/Header/ThemeToggler/ThemeTogglerContainer.jsx","components/Header/Header.jsx","components/Info/Info.jsx","components/Info/InfoContainer.jsx","components/Cities/Cities.jsx","App.js","assets/images/preloader.svg","components/UI/Preloader.jsx","AppContainer.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","instance","axios","create","baseURL","API","getWeather","city","get","response","data","SET_THEME","SET_WEATHER_DATA","SET_CURRENT_CITY","INITIALIZED_SUCCESS","initialState","themes","oldDark","name","styles","primary","burger","toggler","container","circle","background","appBackground","light","dark","theme","currentCity","weather","status","temperature","imageCode","initialized","setCurrentCity","type","getWeatherData","dispatch","weatherData","description","main","temp","icon","setWeatherData","appReducer","state","action","store","createStore","applyMiddleware","thunkMiddleware","window","BurgerWrapper","styled","button","props","Burger","className","connect","Menu","ThemeTogglerWrapper","div","ThemeToggler","useState","togglerCircle","moveTogglerCircle","onClick","e","toggleTheme","style","marginLeft","setTheme","HeaderStyles","header","Header","InfoWrapper","Info","src","alt","dateData","weekday","day","month","hours","minutes","Math","round","date","Date","getDate","Intl","DateTimeFormat","format","toLocaleString","getHours","slice","getMinutes","CitiesWrapper","Cities","AppWrapper","App","PreloaderWrapper","Preloader","preloader","GlobalStyle","createGlobalStyle","initializeApp","promises","Promise","all","useEffect","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0f2f6eed.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import axios from 'axios';\r\n\r\nconst API_KEY = 'bc4b5b106eb4f6a33bb5c03f83e1937c';\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://api.openweathermap.org/data/2.5/',\r\n});\r\n\r\nconst API = {\r\n    getWeather(city) {\r\n        return instance.get(`weather?q=${city}&appid=${API_KEY}&units=metric`)\r\n        .then(response => {\r\n            return response.data;\r\n        })\r\n    }\r\n}\r\n\r\nexport default API;","import API from \"../api/api\";\r\n\r\nconst SET_THEME = \"SET-THEME\";\r\nconst SET_WEATHER_DATA = \"SET-WEATHER-DATA\";\r\nconst SET_CURRENT_CITY = \"SET-CURRENT-CITY\";\r\nconst INITIALIZED_SUCCESS = \"INITIALIZED-SUCCESS\";\r\n\r\nconst initialState = {\r\n    themes: {\r\n        oldDark: {\r\n            name: \"old-dark\",\r\n            styles: {\r\n                primary: \"#FFFFFF\",\r\n                burger: \"#FFFFFF\",\r\n                toggler: {\r\n                    container: \"#89AFE7\",\r\n                    circle: \"#663C6C\",\r\n                },\r\n                background: \"#250933\",\r\n                appBackground:\r\n                    \"linear-gradient(180deg, rgba(1, 9, 85, 0.9) 0%, rgba(148, 8, 151, 0.9) 100%)\",\r\n            },\r\n        },\r\n        light: {\r\n            name: \"light\",\r\n            styles: {\r\n                primary: \"#363434\",\r\n                burger: \"#333232\",\r\n                toggler: {\r\n                    container: \"#284c54\",\r\n                    circle: \"#FFFFFF\",\r\n                },\r\n                background: \"#FFFFFF\",\r\n                appBackground:\r\n                    \"linear-gradient(180deg, rgba(155, 245, 240, 0.8) 0%, rgba(141, 240, 169, 0.8) 100%)\",\r\n            },\r\n        },\r\n        dark: {\r\n            name: \"dark\",\r\n            styles: {\r\n                primary: \"#FFFFFF\",\r\n                burger: \"#FFFFFF\",\r\n                toggler: {\r\n                    container: \"#232323\",\r\n                    circle: \"#FFFFFF\",\r\n                },\r\n                background: \"#232323\",\r\n                appBackground:\r\n                    \"linear-gradient(180deg, rgba(16, 16, 16, 0.9) 0%, rgba(14, 11, 16, 0.9) 100%)\",\r\n            },\r\n        },\r\n    },\r\n    theme: {\r\n        name: \"dark\",\r\n        styles: {\r\n            primary: \"#FFFFFF\",\r\n            burger: \"#FFFFFF\",\r\n            toggler: {\r\n                container: \"#232323\",\r\n                circle: \"#FFFFFF\",\r\n            },\r\n            background: \"#232323\",\r\n            appBackground:\r\n                \"linear-gradient(180deg, rgba(16, 16, 16, 0.9) 0%, rgba(14, 11, 16, 0.9) 100%)\",\r\n        },\r\n    },\r\n    currentCity: \"\",\r\n    weather: {\r\n        city: \"...\",\r\n        status: \"...\",\r\n        temperature: \"...\",\r\n        imageCode: \"\",\r\n    },\r\n    initialized: false,\r\n};\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_THEME: {\r\n            return {\r\n                ...state,\r\n                theme: action.theme,\r\n            };\r\n        }\r\n        case SET_WEATHER_DATA: {\r\n            return {\r\n                ...state,\r\n                weather: action.weather,\r\n            };\r\n        }\r\n        case INITIALIZED_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                initialized: true,\r\n            };\r\n        }\r\n        case SET_CURRENT_CITY: {\r\n            return {\r\n                ...state,\r\n                currentCity: action.currentCity,\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const setTheme = (theme) => {\r\n    return {\r\n        type: SET_THEME,\r\n        theme: theme,\r\n    };\r\n};\r\n\r\nconst setWeatherData = (data) => {\r\n    return {\r\n        type: SET_WEATHER_DATA,\r\n        weather: { ...data },\r\n    };\r\n};\r\n\r\nexport const setCurrentCity = (city) => {\r\n    return {\r\n        type: SET_CURRENT_CITY,\r\n        currentCity: city,\r\n    };\r\n};\r\n\r\nexport const getWeatherData = (city) => {\r\n    return (dispatch) => {\r\n        return API.getWeather(city).then((data) => {\r\n            const weatherData = {\r\n                city: data.name,\r\n                status: data.weather[0].description,\r\n                temperature: data.main.temp,\r\n                imageCode: data.weather[0].icon,\r\n            };\r\n            dispatch(setWeatherData(weatherData));\r\n        });\r\n    };\r\n};\r\n\r\nconst initializingSuccess = () => ({ type: INITIALIZED_SUCCESS });\r\n\r\nexport const initializeApp = (city) => {\r\n    return (dispatch) => {\r\n        const promises = [\r\n            dispatch(setCurrentCity(city)),\r\n            dispatch(getWeatherData(city)),\r\n        ];\r\n        Promise.all(promises).then(() => dispatch(initializingSuccess()));\r\n    };\r\n};\r\n\r\nexport default appReducer;\r\n","import { applyMiddleware, createStore } from 'redux';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport appReducer from './app-reducer';\r\n\r\nconst store = createStore(appReducer, applyMiddleware(thunkMiddleware));\r\n\r\nwindow.store = store;\r\n\r\nexport default store;","import styled from \"styled-components\";\r\n\r\nconst BurgerWrapper = styled.button`\r\n    display: block;\r\n    width: 30px;\r\n    cursor: pointer;\r\n    border: none;\r\n    padding: 0;\r\n    background-color: transparent;\r\n\r\n    span {\r\n        display: block;\r\n        width: 100%;\r\n        height: 3px;\r\n        margin-bottom: 4px;\r\n        border-radius: 10px;\r\n        background-color: ${props => props.theme.burger};\r\n        transition: background-color .8s;\r\n        \r\n        &:last-child {\r\n            margin-bottom: 0;\r\n        }\r\n    }\r\n`;\r\n\r\nconst Burger = (props) => {\r\n    return (\r\n        <BurgerWrapper theme={props.theme} className=\"Burger\">\r\n            <span></span>\r\n            <span></span>\r\n            <span></span>\r\n        </BurgerWrapper>\r\n    )\r\n}\r\n\r\nexport default Burger;","import { connect } from 'react-redux';\r\nimport Burger from './Burger';\r\n\r\nconst BurgerContainer = (props) => {\r\n    return <Burger theme={props.theme}/>;\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        theme: state.theme.styles,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(BurgerContainer);","import BurgerContainer from './BurgerContainer';\r\n\r\nconst Menu = (props) => {\r\n    return (\r\n        <>\r\n            <BurgerContainer />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Menu;\r\n","import { useState } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst ThemeTogglerWrapper = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: flex-start;\r\n    background-color: ${props => props.theme.toggler.container || '#000000'};\r\n    border-radius: 10px;\r\n    width: 44px;\r\n    height: 22px;\r\n    cursor: pointer;\r\n\ttransition: background-color .8s;\r\n\r\n    .Circle {\r\n        background-color: ${props => props.theme.toggler.circle || '#000000'};\r\n        border-radius: 50%;\r\n        width: 15px;\r\n        height: 15px;\r\n        margin-left: 3px;\r\n        transition: background-color .8s, margin .5s ease-out;\r\n    }\r\n`;\r\n\r\nconst ThemeToggler = (props) => {\r\n    const [togglerCircle, moveTogglerCircle] = useState(false);\r\n    \r\n    const handleClick = (e) => {\r\n        moveTogglerCircle(!togglerCircle);\r\n        props.toggleTheme();\r\n    }\r\n\r\n    return (\r\n        <ThemeTogglerWrapper theme={props.theme} className=\"Toggler\" onClick={handleClick}>\r\n            <div className=\"Circle\" style={togglerCircle ? {marginLeft: 26} : {}}></div>\r\n        </ThemeTogglerWrapper>\r\n    );\r\n};\r\n\r\nexport default ThemeToggler;","import { connect } from 'react-redux';\r\nimport { setTheme } from '../../../redux/app-reducer';\r\nimport ThemeToggler from './ThemeToggler';\r\n\r\nconst ThemeTogglerContainer = (props) => {\r\n    const toggleTheme = () => {\r\n        if (props.theme.name === props.themes.light.name) {\r\n            props.setTheme(props.themes.dark);\r\n        } else {\r\n            props.setTheme(props.themes.light);\r\n        }\r\n    };\r\n    return <ThemeToggler theme={props.theme.styles} toggleTheme={toggleTheme}/>;\r\n    \r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        theme: state.theme,\r\n        themes: state.themes,\r\n\t}\r\n}\r\n\r\nexport default connect(mapStateToProps, { setTheme })(ThemeTogglerContainer);","import styled from \"styled-components\";\r\nimport Menu from \"./Menu/Menu\";\r\nimport ThemeTogglerContainer from \"./ThemeToggler/ThemeTogglerContainer\";\r\n\r\nconst HeaderStyles = styled.header`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n`;\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <HeaderStyles>\r\n            <Menu />\r\n            <ThemeTogglerContainer />\r\n        </HeaderStyles>\r\n    );\r\n};\r\n\r\nexport default Header;","import styled from 'styled-components';\r\n\r\nconst InfoWrapper = styled.div`\r\n    text-align: center;\r\n    margin-bottom: 75px;\r\n    padding-top: 100px;\r\n\r\n    .Location {\r\n        font-weight: 100;\r\n        font-size: 48px;\r\n        line-height: 56px;\r\n        margin-bottom: 40px;\r\n    }\r\n    .Img {\r\n        margin-right: 25px;\r\n    }\r\n    .Date {\r\n        font-weight: 500;\r\n        font-size: 24px;\r\n        line-height: 28px;\r\n        margin-left: 25px;\r\n\r\n        p {\r\n            margin: 10px 0;\r\n        }\r\n    }\r\n    .Degree {\r\n        font-weight: bold;\r\n        font-size: 72px;\r\n        line-height: 84px;\r\n    }\r\n    .Status {\r\n        font-weight: 500;\r\n        font-size: 20px;\r\n        text-transform: capitalize;\r\n    }\r\n    .Today {\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        flex-wrap: wrap;\r\n        margin-bottom: 40px;\r\n    }\r\n`;\r\n\r\nconst Info = (props) => {\r\n    return (\r\n        <InfoWrapper className=\"Info\">\r\n            <div className=\"Location\">{props.weather.city}</div>\r\n            <div className=\"Today\">\r\n                <div className=\"Img\">\r\n                    <img src={`http://openweathermap.org/img/wn/${props.weather.imageCode}@2x.png`} alt={props.weather.status} />\r\n                </div>\r\n                <div className=\"Date\">\r\n                    <p>\r\n                        {`${props.dateData.weekday}, ${props.dateData.day} ${props.dateData.month}`}\r\n                    </p>\r\n                    <p>\r\n                        <time>{`${props.dateData.hours}:${props.dateData.minutes}`}</time>\r\n                    </p>\r\n                </div>\r\n            </div>\r\n            <div className=\"Degree\">{Math.round(props.weather.temperature)}°C</div>\r\n            <div className=\"Status\">{props.weather.status}</div>\r\n        </InfoWrapper>\r\n    );\r\n};\r\n\r\nexport default Info;","import { connect } from 'react-redux';\r\nimport Info from './Info';\r\n\r\nconst InfoContainer = (props) => {\r\n    \r\n    let date = new Date();\r\n    const dateData = {\r\n        day: date.getDate(),\r\n        weekday: new Intl.DateTimeFormat('en-US', { weekday: 'long' }).format(date.getDate()),\r\n        month: date.toLocaleString('default', { month: 'long' }),\r\n        hours: ('0' + date.getHours()).slice(-2),\r\n        minutes: ('0' + date.getMinutes()).slice(-2),\r\n    };\r\n\r\n    return (\r\n        <Info dateData={dateData} weather={props.weather}/>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        weather: state.weather,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {})(InfoContainer);\r\n","import styled from \"styled-components\";\r\n\r\nconst CitiesWrapper = styled.div`\r\n    .Title {\r\n        font-weight: 300;\r\n        font-size: 36px;\r\n        line-height: 42px;\r\n        margin-bottom: 15px;\r\n        text-align: center;\r\n    }\r\n    .List {\r\n        padding: 20px;\r\n        padding-top: 10px;\r\n        border-radius: 15px;\r\n        background: rgba(27, 26, 26, 0.15);\r\n    }\r\n    .Item {\r\n        font-weight: 500;\r\n        font-size: 18px;\r\n        line-height: 30px;\r\n        cursor: pointer;\r\n        padding: 5px 0;\r\n    }\r\n`;\r\n\r\nconst Cities = (props) => {\r\n    return (\r\n        <CitiesWrapper className=\"Cities\">\r\n            <div className=\"Title\">Your cities</div>\r\n            <ul className=\"List\">\r\n                <li className=\"Item\">Qostanai (Kazakshtan)</li>\r\n                <li className=\"Item\">Lisakovsk (Kazakshtan)</li>\r\n                <li className=\"Item\">Moscow (Russia)</li>\r\n                <li className=\"Item\">Los Angeles (USA)</li>\r\n            </ul>\r\n        </CitiesWrapper>\r\n    );\r\n};\r\n\r\nexport default Cities;\r\n","import Header from './components/Header/Header';\r\nimport InfoContainer from './components/Info/InfoContainer';\r\nimport Cities from './components/Cities/Cities';\r\nimport styled from 'styled-components';\r\n\r\nconst AppWrapper = styled.div`\r\n\tbackground: ${props => props.theme.appBackground};\r\n\tmax-width: 800px;\r\n\twidth: 100%;\r\n\tborder-radius: 15px;\r\n\tpadding: 30px;\r\n\tmargin: 30px auto;\r\n`;\r\n\r\nconst App = (props) => {\r\n    return (\r\n\t\t<AppWrapper theme={props.theme} className=\"App\">\r\n\t\t\t<Header />\r\n\t\t\t<InfoContainer />\r\n\t\t\t<Cities />\r\n\t\t</AppWrapper>\r\n    );\r\n};\r\n\r\nexport default App;","export default __webpack_public_path__ + \"static/media/preloader.6aaff771.svg\";","import styled from 'styled-components';\r\nimport preloader from '../../assets/images/preloader.svg';\r\n\r\nconst PreloaderWrapper = styled.div`\r\n    position: fixed;\r\n    left: 50%;\r\n    top: 50%;\r\n    transform: translate(-50%, -50%);\r\n    img {\r\n        width: 300px;\r\n    }\r\n`;\r\n\r\nconst Preloader = (props) => {\r\n    return (\r\n        <PreloaderWrapper>\r\n            <img src={preloader} alt='Loading...' />\r\n        </PreloaderWrapper>\r\n    )\r\n}\r\n\r\nexport default Preloader;","import { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { createGlobalStyle } from 'styled-components';\r\nimport App from './App';\r\nimport Preloader from './components/UI/Preloader';\r\nimport { initializeApp } from './redux/app-reducer';\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n\thtml {\r\n\t\tbox-sizing: border-box;\r\n\t}\r\n\r\n\t*,\r\n\t*::before,\r\n\t*::after {\r\n\t\tbox-sizing: inherit;\r\n\t}\r\n\r\n\tbody {\r\n\t\tfont-family: Roboto, sans-serif;\r\n\t\tfont-weight: 400;\r\n\t\t-webkit-font-smoothing: antialiased;\r\n\t\t-moz-osx-font-smoothing: grayscale;\r\n\t\tcolor: ${props => props.theme.primary || '#000000'};\r\n\t\tbackground-color: ${props => props.theme.background || '#FFFFFF'};\r\n\t\ttransition: color .4s ease-in-out, background-color .5s ease-in-out;\r\n\t}\r\n\r\n\timg {\r\n\t\tdisplay: flex;\r\n\t}\r\n\t\r\n\ta,\r\n\tbutton,\r\n\tinput,\r\n\ttextarea,\r\n\tspan {\r\n\t\tdisplay: inline-block;\r\n\t}\r\n`;\r\n\r\nconst AppContainer = (props) => {\r\n\tuseEffect(() => {\r\n\t\tprops.initializeApp('Kostanay');\r\n\t},[])\r\n\r\n\tif (!props.initialized) {return <Preloader /> }\r\n\telse {\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<App theme={props.theme}/>\r\n\t\t\t\t<GlobalStyle theme={props.theme}/>\r\n\t\t\t</>\r\n\t\t)\r\n\t}\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\ttheme: state.theme.styles,\r\n\t\tcurrentCity: state.currentCity,\r\n\t\tinitialized: state.initialized,\r\n\t}\r\n}\r\nexport default connect(mapStateToProps, { initializeApp })(AppContainer);","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'reset-css';\r\nimport store from './redux/store';\r\nimport { Provider } from 'react-redux';\r\nimport AppContainer from './AppContainer';\r\n\r\nReactDOM.render(\r\n\t<Provider store={store}>\r\n\t\t<AppContainer />\r\n\t</Provider>,\r\n\tdocument.getElementById(\"root\"));\r\n\r\nreportWebVitals();"],"sourceRoot":""}